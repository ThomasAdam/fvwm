======================================================================
               Hints for efficient fvwm2 configuration
======================================================================

Last updated 15 Feb 1999 for release 2.2.0.

INDEX

        1) An easy way to test new configurations.
        2) Using shell commands for configuration.
        3) How to start applications on a page or desk other than the
           current.
        4) How to start applications on a page or desk other than the
           current without moving the viewport to the new page or desk.
        5) How do I get window titles on sub windows of ... (e.g.
           Netscape)?
        6) A more efficient MWM menu style.
        7) Placing menus on the screen.
        8) Are you flipping pages by accident when moving the mouse
           close to the border of the screen?
        9) Lining up your windows and icons.
       10) Moving the mouse/focus/page with the keyboard.
       11) The cat safe desktop :-)
       12) Lowering and moving windows.

======================================================================

1) An easy way to test new configurations.

   Did you know that you do not need to restart X or fvwm2 to see what
   most configuration commands do? There are several modules and
   extras that allow you to issue fvwm2 commands at any time. Among
   these are FvwmCommand, FvwmTalk and FvwmConsole. Personally I use
   FvwmCommand and FvwmConsole.

   When you run FvwmConsole you get a shell like window where you can
   type configuration commands that are sent to fvwm2. Just add an
   entry to some menu that starts it:

     AddToMenu main_menu
      + "FvwmConsole" Module FvwmConsole

   Using FvwmCommand is a bit more tricky. To use it you need to start
   a server in your .fvwm2rc by adding this line:

     Module FvwmCommandS

   Make sure FvwmCommand is in your search path. Now you can enter
   commands on the command line of your favorite shell:

     FvwmCommand "MenuStyle * Font 6x9"

   Note that you have to quote the command. The advantage of
   FvwmCommand over FvwmConsole is that you can use your shell with
   all its features to run commands (command completion and history
   for example). The disadvantage is that it is a bit slow since a new
   FvwmCommand has to be started for each command.

   Other related modules and commands are FvwmScript and PipeRead.

======================================================================

2) Using shell commands for configuration.

   Sometimes you might want to use the output of a shell command or
   script in your .fvwm2rc. For example you might need a menu that has
   all filenames in a certain directory as its entries. You can use
   the PipeRead command and the FvwmCommand module. I recommend using
   PipeRead since creating twenty menu items takes a considerable
   amount of time with FvwmCommand.

   Example from my .fvwm2rc:

     # make the background menu
     AddToFunc MakeBackgroundMenu
      + "I" DestroyMenu BackgroundMenu
      + "I" AddToMenu BackgroundMenu Backgrounds Title
      + "I" PipeRead 'for i in `/bin/ls $HOME/.fvwm2/backgrounds/*.bg.*`; \
            do echo -e AddToMenu BackgroundMenu `basename $i | sed -e \
            "s/\.bg\..*$//"` Function SetDefaultBackground $i; done'

     # set the default background
     AddToFunc SetDefaultBackground
      + "I" Exec echo -e $0 > $HOME/.fvwm2/background
      + "I" Function SetBackground

     # set a new background
     AddToFunc SetBackground
      + "I" Exec test -r $HOME/.fvwm2/background && xv -root -quit -viewonly \
            `cat $HOME/.fvwm2/background|tr -d "\n"`

     # activate setting from last session and build the menu
     AddToFunc InitFunction
      + "I" Function SetBackground
      + "I" Function MakeBackgroundMenu


   The MakeBackgroundMenu function builds a menu that contains an item
   for every file that matches the pattern "*.bg.*" in the directory
   $HOME/.fvwm2/backgrounds. The suffix .bg.* is removed. When I
   select an item the file is displayed in the background using xv.
   Furthermore the path and filename are stored in
   $HOME/.fvwm2/background. When I start my next fvwm2 session the
   filename is fetched from there so I get the background from my last
   session.

   I have an even more complex setup for color palettes.

======================================================================

3) How to start applications on a page or desk other than the current.

   Use the 'StartsOnDesk' or 'StartsOnPage' style in your .fvwm2rc:

     Style Netscape* StartsOnPage 0 1

   or

     Style Netscape* StartsOnDesk 1

   Any window with a title that begins with 'Netscape' will be placed
   on page 0 1 (desk 1). You will probably want to use these options
   too:

     GlobalOpts RecaptureHonorsStartsOnPage, CaptureHonorsStartsOnPage

   Note that the GlobalOpts command will be removed some day in the
   future and this options will become style flags.

======================================================================

4) How to start applications on a page or desk other than the current
   without moving the viewport to the new page or desk.

   Use the SkipMapping style:

     Style Netscape* StartsOnPage 0 1, SkipMapping

======================================================================

5) How do I get window titles on sub windows of ... (e.g. Netscape)?

   These windows are known as 'transient' windows because of their
   short lived nature. To get the window decorations for transient
   windows you can use the Style command:

     Style * DecorateTransient

======================================================================

6) A more efficient MWM menu style.

   Perhaps you have noticed that with the MWM menu style your sub
   menus are shown as soon as the pointer enters their menu item. Even
   if you just want to scroll down the list. You can prevent this with
   the 'PopupDelay' and 'PopupDelayed' options of the MenuStyle
   command:

     MenuStyle mwm
     MenuStyle PopupDelayed, PopupDelay 80

   The sub menu will we shown 80 milliseconds after the pointer enters
   the menu item. You will hardly notice the delay. Note that 80 ms
   is just long enough to move through the menu with auto repeat on my
   cursor keys. You may have to experiment with this number to get it
   right.

======================================================================

7) Placing menus on the screen.

   Do you have to close windows or move the pointer all over the
   screen to find some part of the background where you can bring up
   your main menu (or any other root menu)?

   Then you should use a keyboard shortcut. For example

     Key  space A M   Menu root c c main_menu

   in your .fvwm2rc gives you the menu 'main_menu' in the center of
   the screen when you press Alt-space. Or you might want a shortcut
   to the window menu:
   
     Key  space A SM  Menu root c c WindowMenu

   You can place menus anywhere you like, not just where the mouse
   pointer is. Please read the section for the 'Menu' command in the
   manpage.

======================================================================

8) Are you flipping pages by accident when moving the mouse close to
   the border of the screen?

   You can disable page flipping with the EdgeScroll command:

     EdgeScroll 0 0

   in your .fvwm2rc turns it off.

======================================================================

9) Lining up your windows and icons.

   The SnapAttraction and SnapGrid commands really help to keep your
   desktop tidy. With SnapAttraction windows (or icons or both) are
   'attracted' to each other. When you drag a window (icon) and it
   comes close to another window (icon) it clings to it without a gap
   between the borders. Put this command in your .fvwm2rc:

     SnapAttraction 8 SameType

   This means windows cling to other windows if they get closer than
   8 pixels and icons cling to icons. Or if you just want it for
   windows/icons use

     SnapAttraction 8 Windows

   or

     SnapAttraction 8 Icons

   Or if you want icons to cling to windows and vice versa:

     SnapAttraction 8 All


   The SnapGrid command is a big help too:

     SnapGrid 8

   in your .fvwm2rc tells fvwm2 to use a grid of 8 pixels to place
   windows and icons. Try it and see if you like it.

   Hint: It might be a good idea to use a divisor of your desktop
   width and height for SnapGrid.

======================================================================

10) Moving the mouse/focus/page with the keyboard.

    Try these key bindings for mouse movement:

      # shift-<direction> to move a few pixels
      Key   Left   A   S   CursorMove -1 0
      Key   Right  A   S   CursorMove +1 +0
      Key   Up     A   S   CursorMove +0 -1
      Key   Down   A   S   CursorMove +0 +1

      # shift-meta-<direction> to move 1/4 page
      Key   Left   A   SM  Scroll -25 +0
      Key   Right  A   SM  Scroll +25 +0
      Key   Up     A   SM  Scroll +0  -25
      Key   Down   A   SM  Scroll +0  +25

    or these to flip pages

      # shift-control-<direction> to move a full page
      Key   Left   A   SC  CursorMove -10 +0
      Key   Right  A   SC  CursorMove +10 +0
      Key   Up     A   SC  CursorMove +0  -10
      Key   Down   A   SC  CursorMove +0  +10

      # Alt-Fn to go to a specific page (like on the Linux console)
      Key F1 A M GotoPage 0 0
      Key F2 A M GotoPage 1 0
      Key F3 A M GotoPage 0 1
      Key F4 A M GotoPage 1 1

    or to change the focus to a window in a specific direction:

      # number keys on keypad to move the focus
      Key KP_1 A C Direction SouthWest Focus
      Key KP_2 A C Direction South Focus
      Key KP_3 A C Direction SouthEast Focus
      Key KP_4 A C Direction West Focus
      Key KP_6 A C Direction East Focus
      Key KP_7 A C Direction NorthWest Focus
      Key KP_8 A C Direction North Focus
      Key KP_9 A C Direction NorthEast Focus

======================================================================

11) The cat safe desktop :-)

    If your cats keep stepping on your keyboard while you are brewing
    another cup of coffee on of these hints may help:

      Use 'Style * MouseFocus' and move the mouse pointer over the
      background when you go away.

      If you can't do without your 'SloppyFocus' you can move the
      mouse pointer into a window that takes no keyboard input and
      give it the focus (e.g. FvwmButtons or a console message
      window). A true fanatic creates a separate window with a picture
      of his cat for this :-)

======================================================================

12) Lowering and moving windows.

    In some configurations moving a window with the middle mouse
    button lowers the window after moving it. Lowering it before
    moving gives you a nice visual effect:

      Mouse  2 T A  Function MoveOrLower

      AddToFunc MoveOrLower
       + "Click"         Lower
       + "Motion"        Lower
       + "Motion"        Move
       + "DoubleClick"   Lower

======================================================================

