WindowTitle {Base Config}
WindowSize 650 405		# Taille
Font		-adobe-helvetica-bold-r-*-*-12-*

Init
 Begin
  WarpPointer 3
  Set $FDIR=(GetOutput  {echo "$FVWM_USERDIR"} 1 -1)
  Set $FILE=(GetScriptArgument 1)
  If $FILE=={} Then
   Set $FILE={.FvwmBaseConfig}
  Set $FILE=$FDIR {/} $FILE

  Set $CAT={cat } $FILE

  Set $ERRCOM={ls -a } $FILE
  Set $err=(GetOutput $ERRCOM 1 -1)

  Set $PARSE=0
  If $err<>{} Then # .FvwmBaseConfig exists
   Begin
   Set $pos=0
   Set $finish=1
   While $finish=={1} Do
    Begin
    Set $pos=(Add $pos 1)
    Set $tmp=(GetOutput $CAT $pos 1)
    If $tmp=={#BaseConfigMark} Then
     Begin
     Set $PARSE=1
     Set $finish=0
     End
    If $pos=={200} Then
     Set $finish=0
    End
   End

  If $PARSE==1 Then  # "Base Config" exists, Parse it !
   Begin
   Set $CAT={cat } $FILE

   Set $pos=(Add $pos 1)
   Set $FOCUS=(GetOutput $CAT $pos -1)
   If $FOCUS=={Style * SloppyFocus} Then
    ChangeValue 11 1
   If $FOCUS=={Style * FocusFollowsMouse} Then
    ChangeValue 11 2
   If $FOCUS=={Style * ClickToFocus} Then
    ChangeValue 11 3

   Set $pos=(Add $pos 1)
   Set $MOUSERAISES=(GetOutput $CAT $pos -1)
   If $MOUSERAISES=={Style * MouseFocusClickRaises} Then
    ChangeValue 12 1
   Else
     ChangeValue 12 0

   Set $pos=(Add $pos 1)
   Set $CLICKRAISES=(GetOutput $CAT $pos -1)
   If $CLICKRAISES=={Style * ClickToFocusRaises} Then
    ChangeValue 13 1
   Else
    ChangeValue 13 0

   Set $pos=(Add $pos 1)
   Set $PASSASCLICK=(GetOutput $CAT $pos -1)
   If $PASSASCLICK=={Style * ClickToFocusPassesClick} Then
    ChangeValue 14 1
   Else
    ChangeValue 14 1

   Set $pos=(Add $pos 1)
   Set $HORPAGE=(GetOutput $CAT $pos 2)
   If $HORPAGE == {0} Then
    ChangeValue 17 1
   If $HORPAGE == {100} Then
    ChangeValue 17 2
   If $HORPAGE == {100000} Then
    ChangeValue 17 3
   If $HORPAGE == {50} Then
    ChangeValue 17 4
   If $HORPAGE == {50000} Then
    ChangeValue 17 5
   If $HORPAGE == {25} Then
    ChangeValue 17 6
   If $HORPAGE == {25000} Then
    ChangeValue 17 7
   If $HORPAGE == {10} Then
    ChangeValue 17 6
   If $HORPAGE == {10000} Then
    ChangeValue 17 7

   Set $VERPAGE=(GetOutput $CAT $pos 3)
   If $VERPAGE == {0} Then
    ChangeValue 20 1
   If $VERPAGE == {100} Then
    ChangeValue 20 2
   If $VERPAGE == {100000} Then
    ChangeValue 20 3
   If $VERPAGE == {50} Then
    ChangeValue 20 4
   If $VERPAGE == {50000} Then
    ChangeValue 20 5
   If $VERPAGE == {25} Then
    ChangeValue 20 6
   If $VERPAGE == {25000} Then
    ChangeValue 20 7
   If $VERPAGE == {10} Then
    ChangeValue 20 6
   If $VERPAGE == {10000} Then
    ChangeValue 20 7

   Set $pos=(Add $pos 1)
   Set $EDGEDELAY=(GetOutput $CAT $pos 2)
   Set $EDGERESIST=(GetOutput $CAT $pos 3)
   ChangeTitle 22 $EDGEDELAY
   ChangeTitle 45 $EDGERESIST

   Set $pos=(Add $pos 1)
   Set $EDGETHICK=(GetOutput $CAT $pos -1)
   If $EDGETHICK == {EdgeThickness 0} Then
    ChangeValue 24 1
   If $EDGETHICK == {EdgeThickness 1} Then
    ChangeValue 24 2
   If $EDGETHICK == {EdgeThickness 2} Then
    ChangeValue 24 3

   Set $pos=(Add $pos 1)
   Set $PLACEMENT=(GetOutput $CAT $pos -1)
   If $PLACEMENT=={Style * SmartPlacement} Then
    ChangeValue 26 1
   If $PLACEMENT=={Style * DumbPlacement} Then
    ChangeValue 26 2

   Set $pos=(Add $pos 1)
   Set $INTERPLACE=(GetOutput $CAT $pos -1)
   If $INTERPLACE=={Style * RandomPlacement} Then
    ChangeValue 27 1
   If $INTERPLACE=={Style * ActivePlacement} Then
    ChangeValue 27 2
  
   Set $pos=(Add $pos 1)
   Set $REALLYSMART=(GetOutput $CAT $pos -1)
   If $REALLYSMART=={Style * CleverPlacement} Then
    ChangeValue 28 1
   Else
    ChangeValue 28 0

   Set $pos=(Add $pos 1)
   Set $GRABFOCUS=(GetOutput $CAT $pos -1)
   If $GRABFOCUS=={Style * GrabFocus} Then
    Begin
    ChangeValue 30 1
    ChangeValue 31 0
    End
   Else
    Begin
    ChangeValue 30 0
    ChangeValue 31 1
    End

   Set $pos=(Add $pos 1)
   Set $PPOSITION=(GetOutput $CAT $pos -1)
   If $PPOSITION=={Style * UsePPosition} Then
    Begin
    ChangeValue 33 1
    ChangeValue 34 0
    End
   Else
    Begin
    ChangeValue 33 0
    ChangeValue 34 1
    End

   #########################

   Set $pos=(Add $pos 1)
   Set $OPAQ=(GetOutput $CAT $pos 2)
   ChangeValue 41 $OPAQ
   ChangeTitle 43 $OPAQ


   Set $pos=(Add $pos 1)
   Set $MOVETHRESHOLD=(GetOutput $CAT $pos 2)
   ChangeTitle 47 $MOVETHRESHOLD

   Set $pos=(Add $pos 1)
   Set $RESIZEOPAQ=(GetOutput $CAT $pos -1)
   If $RESIZEOPAQ=={Style * ResizeOpaque} Then
    Begin
    ChangeValue 49 1
    ChangeValue 50 0
    End
   Else
    Begin
    ChangeValue 49 0
    ChangeValue 50 1
    End

   Set $pos=(Add $pos 1)
   Set $HIDEGEO=(GetOutput $CAT $pos -1)
   If $HIDEGEO=={HideGeometryWindow Never} Then
    Begin
    Set $HIDEMOVE={NO}
    Set $HIDERESIZE={NO}
    ChangeValue 52 0
    ChangeValue 53 0
    End
   If $HIDEGEO=={HideGeometryWindow Resize} Then
    Begin
    Set $HIDEMOVE={NO}
    Set $HIDERESIZE={YES}
    ChangeValue 52 0
    ChangeValue 53 1
    End
   If $HIDEGEO=={HideGeometryWindow Move} Then
    Begin
    Set $HIDEMOVE={YES}
    Set $HIDERESIZE={NO}
    ChangeValue 52 1
    ChangeValue 53 0
    End
   If $HIDEGEO=={HideGeometryWindow} Then
    Begin
    Set $HIDEMOVE={YES}
    Set $HIDERESIZE={YES}
    ChangeValue 52 1
    ChangeValue 53 1
    End

   Set $pos=(Add $pos 1)
   Set $SADISTANCE=(GetOutput $CAT $pos 2)
   Set $SNAPTYPE=(GetOutput $CAT $pos 3)
   Set $SASCREEN=(GetOutput $CAT $pos 4)
   If $SASCREEN=={Screen} Then
    Set $SNAPTYPE=$SNAPTYPE { Screen}

   ChangeTitle 56 $SADISTANCE
   If $SNAPTYPE=={All} Then
    ChangeValue 58 1
   If $SNAPTYPE=={All Screen} Then
    ChangeValue 58 2
   If $SNAPTYPE=={SameType} Then
    ChangeValue 58 3
   If $SNAPTYPE=={SameType Screen} Then
    ChangeValue 58 4
   If $SNAPTYPE=={Windows} Then
    ChangeValue 58 5
   If $SNAPTYPE=={Windows Screen} Then
    ChangeValue 58 6
   If $SNAPTYPE=={Icons} Then
    ChangeValue 58 7
   If $SNAPTYPE=={Icons Screen} Then
    ChangeValue 58 8

   Set $pos=(Add $pos 1)
   Set $EMULATE=(GetOutput $CAT $pos -1)
   If $EMULATE=={Emulate fvwm} Then
    Begin
    ChangeValue 60 1
    ChangeValue 61 0
    ChangeValue 62 0
    End
   If $EMULATE=={Emulate mwm} Then
    Begin
    ChangeValue 60 0
    ChangeValue 61 1
    ChangeValue 62 0
    End
   If $EMULATE=={Emulate win} Then
    Begin
    ChangeValue 60 0
    ChangeValue 61 0
    ChangeValue 62 1
    End

   Set $pos=(Add $pos 1)
   Set $SHADESTEPS=(GetOutput $CAT $pos 4)
   ChangeTitle 64 $SHADESTEPS

  End
  
  ###########################################################################
  #.FvwmBaseConfig does not exist or contains no "Base Style", 
  # set the default!
  Else # .FvwmBaseConfig does not exist or , set the default!
   Begin

   Set $FOCUS={Style * SloppyFocus}
   ChangeValue 11 1

   Set $MOUSERAISES={Style * MouseFocusClickRaises}
   ChangeValue 12 1   
   Set $CLICKRAISES={Style * ClickToFocusRaises}
   ChangeValue 13 1
   Set $PASSASCLICK={Style * ClickToFocusPassesClick}
   ChangeValue 14 1

   Set $HORPAGE={0}
   Set $VERPAGE={0}
   ChangeValue 17 1
   ChangeValue 20 1
   Set $EDGEDELAY={0}
   Set $EDGERESIST={0}
   ChangeTitle 22 $EDGEDELAY
   ChangeTitle 45 $EDGERESIST
   Set $EDGETHICK={EdgeThickness 1}
   ChangeValue 24 2

   Set $PLACEMENT={Style * SmartPlacement}
   ChangeValue 26 1
   Set $INTERPLACE={Style * RandomPlacement}
   ChangeValue 27 1
   Set $REALLYSMART={Style * CleverPlacementOff}
   ChangeValue 28 1

   Set $GRABFOCUS={Style * GrabFocusOff}
   ChangeValue 30 0
   ChangeValue 31 1

   Set $PPOSITION={Style * NoPPosition}
   ChangeValue 33 0
   ChangeValue 34 1

   Set $OPAQ=50
   ChangeValue 41 $OPAQ
   ChangeTitle 43 $OPAQ

   Set $MOVETHRESHOLD=5
   ChangeTitle 47 $MOVETHRESHOLD

   ChangeValue 49 0
   ChangeValue 50 1
   Set $RESIZEOPAQ={Style * ResizeOutline}

   Set $HIDEGEO={HideGeometryWindow Never}
   Set $HIDEMOVE={NO}
   Set $HIDERESIZE={NO}
   ChangeValue 52 0
   ChangeValue 53 0

   Set $SADISTANCE=10
   ChangeTitle 56 $SADISTANCE
   Set $SNAPTYPE={All}
   ChangeValue 58 1

   Set $EMULATE={Emulate fvwm}
   ChangeValue 60 1
   ChangeValue 61 0
   ChangeValue 62 0

   Set $SHADESTEPS=20
   ChangeTitle 64 $SHADESTEPS

  End
 End

Widget 1
Property
 Size 50 30
 Position 350 365
 Type PushButton
 Title {Ok}
Main
 Case message of
  SingleClic :
  Begin

  If $err<>{} Then # Backup
   Begin
   Set $BACK={cp -f } $FILE { } $FILE {.old}
   Set $tmp=(GetOutput $BACK 1 -1)
   End

   WriteToFile $FILE {#BaseConfigMark}

   Do $FOCUS
   WriteToFile $FILE $FOCUS

   Do $MOUSERAISES
   WriteToFile $FILE $MOUSERAISES

   Do $CLICKRAISES
   WriteToFile $FILE $CLICKRAISES

   Do $PASSASCLICK
   WriteToFile $FILE $PASSASCLICK

   Do {EdgeScroll } $HORPAGE { } $VERPAGE
   Do {EdgeResistance } (GetTitle 22) { } (GetTitle 45)
   Do $EDGETHICK
   WriteToFile $FILE {EdgeScroll } $HORPAGE { } $VERPAGE
   WriteToFile $FILE {EdgeResistance } (GetTitle 22) { } (GetTitle 45)
   WriteToFile $FILE $EDGETHICK

   Do $PLACEMENT
   WriteToFile $FILE $PLACEMENT

   Do $INTERPLACE
   WriteToFile $FILE $INTERPLACE

   Do $REALLYSMART
   WriteToFile $FILE $REALLYSMART

   Do $GRABFOCUS
   WriteToFile $FILE $GRABFOCUS

   Do $PPOSITION
   WriteToFile $FILE $PPOSITION

   Do {OpaqueMoveSize } (GetValue 41)
   WriteToFile $FILE {OpaqueMoveSize } (GetValue 41)

   Do {MoveThreshold } (GetTitle 47)
   WriteToFile $FILE {MoveThreshold } (GetTitle 47)

   Do $RESIZEOPAQ
   WriteToFile $FILE $RESIZEOPAQ

   Do $HIDEGEO
   WriteToFile $FILE  $HIDEGEO

   Do {SnapAttraction } (GetTitle 56) { }  $SNAPTYPE
   WriteToFile $FILE {SnapAttraction } (GetTitle 56) { }  $SNAPTYPE

   Do $EMULATE
   WriteToFile $FILE $EMULATE

   Do {Style * WindowShadeSteps } (GetTitle 64)
   WriteToFile $FILE {Style * WindowShadeSteps } (GetTitle 64)
   
   Do BaseConfigOkFunc
   Quit
  End
End

Widget 2
Property
 Size 50 30
 Position 450 365
 Type PushButton
 Title {Apply}
Main
 Case message of
  SingleClic :
  Begin
   Do $FOCUS
   Do $MOUSERAISES
   Do $CLICKRAISES   
   Do $PASSASCLICK
   Do {EdgeScroll } $HORPAGE { } $VERPAGE
   Do {EdgeResistance } (GetTitle 22) { } (GetTitle 45)
   Do $EDGETHICK
   Do $PLACEMENT
   Do $INTERPLACE
   Do $REALLYSMART
   Do $GRABFOCUS
   Do $PPOSITION
   Do {OpaqueMoveSize } (GetValue 41)
   Do {MoveThreshold } (GetTitle 47)
   Do $RESIZEOPAQ
   Do $HIDEGEO
   Do {SnapAttraction } (GetTitle 56) { }  $SNAPTYPE
   Do $EMULATE
   Do {Style * WindowShadeSteps } (GetTitle 64)
   Do BaseConfigApplyFunc
  End
End

Widget 3
Property
 Size 30 30
 Position 550 365
 Type PushButton
 Title {Cancel}
Main
 Case message of
  SingleClic :
  Begin
   Quit
  End
End

Widget 4
Property
 Size 30 30
 Position 30 365
 Type PushButton
 Title {Reset "Defaults"}
Main
 Case message of
  SingleClic :
  Begin

   Set $FOCUS={Style * SloppyFocus}
   ChangeValue 11 1

   Set $MOUSERAISES={Style * MouseFocusClickRaises}
   ChangeValue 12 1   
   Set $CLICKRAISES={Style * ClickToFocusRaises}
   ChangeValue 13 1
   Set $PASSASCLICK={Style * ClickToFocusPassesClick}
   ChangeValue 14 1

   Set $HORPAGE={0}
   Set $VERPAGE={0}
   ChangeValue 17 1
   ChangeValue 20 1
   Set $EDGEDELAY={0}
   Set $EDGERESIST={0}
   ChangeTitle 22 $EDGEDELAY
   ChangeTitle 45 $EDGERESIST
   Set $EDGETHICK={EdgeThickness 1}
   ChangeValue 24 2

   Set $PLACEMENT={Style * SmartPlacement}
   ChangeValue 26 1
   Set $INTERPLACE={Style * RandomPlacement}
   ChangeValue 27 1
   Set $REALLYSMART={Style * CleverPlacementOff}
   ChangeValue 28 1

   Set $GRABFOCUS={Style * GrabFocusOff}
   ChangeValue 30 0
   ChangeValue 31 1

   Set $PPOSITION={Style * NoPPosition}
   ChangeValue 33 0
   ChangeValue 34 1

   Set $OPAQ=50
   ChangeValue 41 $OPAQ
   ChangeTitle 43 $OPAQ

   Set $MOVETHRESHOLD=3
   ChangeTitle 47 $MOVETHRESHOLD

   ChangeValue 49 0
   ChangeValue 50 1
   Set $RESIZEOPAQ={Style * ResizeOutline}

   Set $HIDEGEO={HideGeometryWindow Never}
   Set $HIDEMOVE={NO}
   Set $HIDERESIZE={NO}
   ChangeValue 52 0
   ChangeValue 53 0

   Set $SADISTANCE=10
   ChangeTitle 56 $SADISTANCE
   Set $SNAPTYPE={All Screen}
   ChangeValue 58 1

   Set $EMULATE={Emulate fvwm}
   ChangeValue 60 1
   ChangeValue 61 0
   ChangeValue 62 0

   Set $SHADESTEPS=20
   ChangeTitle 64 $SHADESTEPS
  
  End
End

Widget 5
Property
 Size 30 30
 Position 210 365
 Type PushButton
 Title {Misc Config}
Main
 Case message of
  SingleClic :
  Begin
  End
End

Widget 6
Property
 Size 310 345
 Position 10 10
 Type Rectangle
Main
 Case message of
  SingleClic :
  Begin
  End
End

Widget 7
Property
 Size 310 345
 Position 330 10
 Type Rectangle
Main
 Case message of
  SingleClic :
  Begin
  End
End

#############################################################################
# First rectangle

Widget 10
Property
 Position 20 30
 Type ItemDraw
 Title {Focus:}
Main
 Case message of
  SingleClic :
  Begin
  End
End

Widget 11
Property
 Position 100 25
 Type PopupMenu
 Title {Sloppy Focus|Focus Follows Mouse|Click To Focus}
Main
 Case message of
  SingleClic :
  Begin
   If (GetValue 11) == 1 Then
    Set $FOCUS={Style * SloppyFocus}
   If (GetValue 11) == 2 Then
    Set $FOCUS={Style * FocusFollowsMouse}
   If (GetValue 11) == 3 Then
    Set $FOCUS={Style * ClickToFocus}
  End
End

Widget 12
Property
 Position 70 60
 Type CheckBox
 Title {Mouse Focus Click Raise}
Main
 Case message of
  SingleClic :
  Begin
   If (GetValue 12) == 1 Then
    Set $MOUSERAISES={Style * MouseFocusClickRaises}
   Else
    Set $MOUSERAISES={Style * MouseFocusClickDoesntRaise}
  End
End

Widget 13
Property
 Position 70 80
 Type CheckBox
 Title {Click To Focus Raise}
Main
 Case message of
  SingleClic :
  Begin
   If (GetValue 13) == 1 Then
   Set $CLICKRAISES={Style * ClickToFocusRaises}
   Else
   Set $CLICKRAISES={Style * ClickToFocusRaisesOff}
  End
End

Widget 14
Property
 Position 70 100
 Type CheckBox
 Title {Click To Focus Passes Click}
Main
 Case message of
  SingleClic :
  Begin
   If (GetValue 14) == 1 Then
    Set $PASSASCLICK={Style * ClickToFocusPassesClick}
   Else
    Set $PASSASCLICK={Style * ClickToFocusDoesntPassClick}
  End
End

Widget 15
Property
 Position 20 135
 Type ItemDraw
 Title {Horizontal Paging:}
Main
 Case message of
  SingleClic :
  Begin
  End
End

Widget 17
Property
 Position 150 130
 Type PopupMenu
 Title {OFF|100%|100% & Warp|50%|50% & Warp|25%|25% & Warp|10%|10% & Warp}
Main
 Case message of
  SingleClic :
  Begin
   If (GetValue 17) == 1 Then
    Set $HORPAGE={0}
   If (GetValue 17) == 2 Then
    Set $HORPAGE={100}
   If (GetValue 17) == 3 Then
    Set $HORPAGE={100000}
   If (GetValue 17) == 4 Then
    Set $HORPAGE={50}
   If (GetValue 17) == 5 Then
    Set $HORPAGE={50000}
   If (GetValue 17) == 6 Then
    Set $HORPAGE={25}
   If (GetValue 17) == 7 Then
    Set $HORPAGE={25000}
   If (GetValue 17) == 8 Then
    Set $HORPAGE={10}
   If (GetValue 17) == 9 Then
    Set $HORPAGE={10000}
   If (GetValue 17) <> 1 Then
    Begin
    If (GetValue 24) == 1 Then
     Begin
     ChangeValue 24 2
     Set $EDGETHICK={EdgeThickness 1}
     End
    End
  End
End

Widget 19
Property
 Position 20 170
 Type ItemDraw
 Title {Vertical Paging:}
Main
 Case message of
  SingleClic :
  Begin
  End
End

Widget 20
Property
 Position 150 165
 Type PopupMenu
 Title {OFF|100%|100% & Warp|50%|50% & Warp|25%|25% & Warp| 10% |10% & Warp}
Main
 Case message of
  SingleClic :
  Begin
   If (GetValue 20) == 1 Then
    Set $VERPAGE={0}
   If (GetValue 20) == 2 Then
    Set $VERPAGE={100}
   If (GetValue 20) == 3 Then
    Set $VERPAGE={100000}
   If (GetValue 20) == 4 Then
    Set $VERPAGE={50}
   If (GetValue 20) == 5 Then
    Set $VERPAGE={50000}
   If (GetValue 20) == 6 Then
    Set $VERPAGE={25}
   If (GetValue 20) == 7 Then
    Set $VERPAGE={25000}
   If (GetValue 20) == 8 Then
    Set $VERPAGE={10}
   If (GetValue 20) == 9 Then
    Set $VERPAGE={10000}
   If (GetValue 20) <> 1 Then
    Begin
    If (GetValue 24) == 1 Then
     Begin
     ChangeValue 24 2
     Set $EDGETICK={EdgeThickness 1}
     End
    End
  End
End

Widget 21
Property
 Position 20 205
 Type ItemDraw
 Title {Paging Delay (ms):}
Main
 Case message of
  SingleClic :
  Begin
  End
End

Widget 22
Property
 Position 145 200
 Size 40 15
 Type TextField
 Font fixed
 Title {}
Main
 Case message of
  SingleClic :
  Begin
  End
End

Widget 23
Property
 Position 190 205
 Type ItemDraw
 Title {Thickness:}
Main
 Case message of
  SingleClic :
  Begin
  End
End

Widget 24
Property
 Position 265 200
 Type PopupMenu
 Title {0|1|2}
Main
 Case message of
  SingleClic :
  Begin
   If (GetValue 24) == 1 Then
    Begin
    Set $EDGETHICK={EdgeThickness 0}
    Set $HORPAGE={0}
    Set $VERPAGE={0}
    ChangeValue 17 1
    ChangeValue 20 1
    End
   If (GetValue 24) == 2 Then
    Set $EDGETHICK={EdgeThickness 1}
   If (GetValue 24) == 3 Then
    Set $EDGETHICK={EdgeThickness 2}
  End
End

Widget 25
Property
 Position 20 235
 Type ItemDraw
 Title {Windows Placement:}
Main
 Case message of
  SingleClic :
  Begin
  End
End

Widget 26
Property
 Position 40 255
 Type PopupMenu
 Title {Smart|Dumb}
Main
 Case message of
  SingleClic :
  Begin
   If (GetValue 26) == 1 Then
    Set $PLACEMENT={Style * SmartPlacement}
   If (GetValue 26) == 2 Then
    Set $PLACEMENT={Style * DumbPlacement}
  End
End

Widget 27
Property
 Position 200 255
 Type PopupMenu
 Title {Random|Active}
Main
 Case message of
  SingleClic :
  Begin
   If (GetValue 27) == 1 Then
    Set $INTERPLACE={Style * RandomPlacement}
   If (GetValue 27) == 2 Then
    Set $INTERPLACE={Style * ActivePlacement}
  End
End

Widget 28
Property
 Position 40 285
 Type CheckBox
 Title {Smart Placement is Clever}
Main
 Case message of
  SingleClic :
  Begin
   If (GetValue 28) == 1 Then
    Set $REALLYSMART={Style * CleverPlacement}
   Else
    Set $REALLYSMART={Style * CleverPlacementOff}
  End
End

Widget 29
Property
 Position 30 310
 Type ItemDraw
 Title {New windows grab the focus:}
Main
 Case message of
  SingleClic :
  Begin
  End
End

Widget 30
Property
 Title {Yes}
 Position 225 310
 Type RadioButton
 Value 0
Main
 Case message of
  SingleClic :
  Begin
   ChangeValue 30 1
   ChangeValue 31 0
   Set $GRABFOCUS={Style * GrabFocus}
  End
End

Widget 31
Property
 Title {No}
 Position 275 310
 Type RadioButton
 Value 0
Main
 Case message of
  SingleClic :
  Begin
   ChangeValue 30 0
   ChangeValue 31 1
   Set $GRABFOCUS={Style * GrabFocusOff}
  End
End

Widget 32
Property
 Position 30 330
 Type ItemDraw
 Title {Use Applications position hints:}
Main
 Case message of
  SingleClic :
  Begin
  End
End

Widget 33
Property
 Title {Yes}
 Position 225 330
 Type RadioButton
 Value 0
Main
 Case message of
  SingleClic :
  Begin
   ChangeValue 33 1
   ChangeValue 34 0
   Set $PPOSITION={Style * UsePPosition}
  End
End

Widget 34
Property
 Title {No}
 Position 275 330
 Type RadioButton
 Value 0
Main
 Case message of
  SingleClic :
  Begin
   ChangeValue 33 0
   ChangeValue 34 1
   Set $PPOSITION={Style * NoPPosition}
  End
End

#########################################################################
# Second rectangle #

Widget 40
Property
 Size 35 25
 Position 520 25
 Type Rectangle
Main
 Case message of
  SingleClic :
  Begin
  End
End

Widget 41
Property
 Size 25 25
 Position 560 21
 Value 10
 MaxValue 101
 MinValue 0
 Type MiniScroll
Main
 Case message of
  SingleClic :
  Begin
   ChangeTitle 43 (GetValue 41)
  End
End

Widget 42
Property
 Size 25 25
 Position 340 25
 Type ItemDraw
 Title {Opaque move size (%):}
Main
 Case message of
  SingleClic :
  Begin
  End
End

Widget 43
Property
 Position 528 28
 Size 20 20
 Font fixed
 Type ItemDraw
 Title {10}
Main
 Case message of
  SingleClic :
  Begin
  End
End

Widget 44
Property
 Position 340 70
 Type ItemDraw
 Title {Moving Edge Resistance (pixels):}
Main
 Case message of
  SingleClic :
  Begin
  End
End

Widget 45
Property
 Position 550 65
 Size 30 15
 Font fixed
 Type TextField
 Title {}
Main
 Case message of
  SingleClic :
  Begin
  End
End


Widget 46
Property
 Position 340 103
 Type ItemDraw
 Title {Move Threshold:}
Main
 Case message of
  SingleClic :
  Begin
  End
End

Widget 47
Property
 Position 480 98
 Size 30 15
 Type TextField
 Title {}
Main
 Case message of
  SingleClic :
  Begin
  End
End

Widget 48
Property
 Position 340 135
 Type ItemDraw
 Title {Resize:}
Main
 Case message of
  SingleClic :
  Begin
  End
End

Widget 49
Property
 Title {Opaque}
 Position 410 135
 Type RadioButton
 Value 0
Main
 Case message of
  SingleClic :
  Begin
   ChangeValue 49 1
   ChangeValue 50 0
   Set $RESIZEOPAQ={Style * ResizeOpaque}
  End
End

Widget 50
Property
 Title {Out line}
 Position 500 135
 Type RadioButton
 Value 0
Main
 Case message of
  SingleClic :
  Begin
   ChangeValue 49 0
   ChangeValue 50 1
   Set $RESIZEOPAQ={Style * ResizeOutline}
  End
End

Widget 51
Property
 Position 340 165
 Type ItemDraw
 Title {Hide Geometry:}
Main
 Case message of
  SingleClic :
  Begin
  End
End

Widget 52
Property
 Title {Move}
 Position 460 165
 Type RadioButton
 Value 0
Main
 Case message of
  SingleClic :
  Begin
   If $HIDEMOVE=={YES} Then
    Begin
    ChangeValue 52 0
    Set $HIDEMOVE={NO}
    If $HIDERESIZE=={YES} Then
     Set $HIDEGEO={HideGeometryWindow Resize}
    Else
     Set $HIDEGEO={HideGeometryWindow Never}
    End
   Else
    Begin
    ChangeValue 52 1
    Set $HIDEMOVE={YES}
    If $HIDERESIZE=={YES} Then
     Set $HIDEGEO={HideGeometryWindow}
    Else
     Set $HIDEGEO={HideGeometryWindow Move}
    End
  End
End

Widget 53
Property
 Title {Resize}
 Position 540 165
 Type RadioButton
 Value 0
Main
 Case message of
  SingleClic :
  Begin
   If $HIDERESIZE=={YES} Then
    Begin
    ChangeValue 53 0
    Set $HIDERESIZE={NO}
    If $HIDEMOVE=={YES} Then
     Set $HIDEGEO={HideGeometryWindow Move}
    Else
     Set $HIDEGEO={HideGeometryWindow Never}
    End
   Else
    Begin
    ChangeValue 53 1
    Set $HIDERESIZE={YES}
    If $HIDEMOVE=={YES} Then
     Set $HIDEGEO={HideGeometryWindow}
    Else
     Set $HIDEGEO={HideGeometryWindow Resize}
    End
  End
End

Widget 54
Property
 Position 340 195
 Type ItemDraw
 Title {Snap Attraction:}
Main
 Case message of
  SingleClic :
  Begin
  End
End

Widget 55
Property
 Position 350 220
 Type ItemDraw
 Title {distance (pixels):}
Main
 Case message of
  SingleClic :
  Begin
  End
End


Widget 56
Property
 Position 480 215
 Size 30 15
 Type TextField
 Title {}
Main
 Case message of
  SingleClic :
  Begin
  End
End

Widget 57
Property
 Position 350 255
 Type ItemDraw
 Title {behavior:}
Main
 Case message of
  SingleClic :
  Begin
  End
End

Widget 58
Property
 Position 425 250
 Type PopupMenu
 Title {Icons & Windows|Icons & Windows (Screen)|Same Type |Same Type (Screen)|Windows|Windows (Screen)|Icons|Icons (Screen)}
Main
 Case message of
  SingleClic :
  Begin
   If (GetValue 58) == 1 Then
    Set $SNAPTYPE={All}
   If (GetValue 58) == 2 Then
    Set $SNAPTYPE={All Screen}
   If (GetValue 58) == 3 Then
    Set $SNAPTYPE={SameType}
   If (GetValue 58) == 4 Then
    Set $SNAPTYPE={SameType Screen}
   If (GetValue 58) == 5 Then
    Set $SNAPTYPE={Windows}
   If (GetValue 58) == 6 Then
    Set $SNAPTYPE={Windows Screen}
   If (GetValue 58) == 7 Then
    Set $SNAPTYPE={Icons}
   If (GetValue 58) == 8 Then
    Set $SNAPTYPE={Icons Screen}
  End
End

Widget 59
Property
 Position 340 290
 Type ItemDraw
 Title {Emulate:}
Main
 Case message of
  SingleClic :
  Begin
  End
End

Widget 60
Property
 Title {FVWM}
 Position 410 290
 Type RadioButton
 Value 0
Main
 Case message of
  SingleClic :
  Begin
   ChangeValue 60 1
   ChangeValue 61 0
   ChangeValue 62 0
   Set $EMULATE={Emulate fvwm}
  End
End

Widget 61
Property
 Title {MWM}
 Position 480 290
 Type RadioButton
 Value 0
Main
 Case message of
  SingleClic :
  Begin
  ChangeValue 60 0
  ChangeValue 61 1
  ChangeValue 62 0
  Set $EMULATE={Emulate mwm}
  End
End

Widget 62
Property
 Title {WIN}
 Position 550 290
 Type RadioButton
 Value 0
Main
 Case message of
  SingleClic :
  Begin
  ChangeValue 60 0
  ChangeValue 61 0
  ChangeValue 62 1
  Set $EMULATE={Emulate win}
  End
End

Widget 63
Property
 Position 340 323
 Type ItemDraw
 Title {Window shade animation steps:}
Main
 Case message of
  SingleClic :
  Begin
  End
End


Widget 64
Property
 Position 550 320
 Size 30 15
 Type TextField
 Title {}
Main
 Case message of
  SingleClic :
  Begin
  End
End
