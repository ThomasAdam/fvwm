.\" Automatically generated by Pod::Man v1.37, Pod::Parser v1.14
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used to
.\" do unbreakable dashes and therefore won't be available.  \*(C` and \*(C'
.\" expand to `' in nroff, nothing in troff, for use with C<>.
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "FVWMTABS 1"
.TH FVWMTABS 1 "2006-05-31" "FvwmTabs" "FVWM Modules"
.SH "NAME"
\&\fBFvwmTabs\fR \- a generic tabbing module for the FVWM window manager.
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
\&\fBFvwmTabs\fR is spawned by \s-1FVWM\s0, so no command line invocation is possible.
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
The \fBFvwmTabs\fR module is capable of swallowing any \s-1FVWM\s0 window & treating it as a tab in a \fItab-manager\fR window. A tab-manager is sometimes called a \fItabber\fR.
.PP
Each tab-manager can store any number of windows, each in its own \fItab\fR. The number of tab-managers is limited only by system resources. Tab-managers can even be nested/swallowed within other tab\-managers. (ie. a tab-manager can be added as an individual tab to another tab\-manager.)
.SH "INVOCATION"
.IX Header "INVOCATION"
\&\fBFvwmTabs\fR can be invoked by inserting the line \f(CW\*(C`Module FvwmTabs\*(C'\fR in your .fvwmrc file. This can be placed on a line by itself, if \fBFvwmTabs\fR is to be spawned during \s-1FVWM\s0's initialization, or can be bound to a menu or mouse button or keystroke to invoke it later.
.SH "INSTALLING DEPENDENCIES"
.IX Header "INSTALLING DEPENDENCIES"
\&\fBFvwmTabs\fR requires 2 \s-1CPAN\s0 modules (that are \s-1NOT\s0 distributed with \s-1FVWM\s0) to be installed on your system. They are \fITk\fR and \fIX11::Protocol\fR.
.PP
They are available at: <http://search.cpan.org/CPAN/authors/id/N/NI/NI\-S/Tk\-804.027.tar.gz> and <http://search.cpan.org/CPAN/authors/id/S/SM/SMCCAM/X11\-Protocol\-0.54.tar.gz>.
.PP
To install either package:
.PP
tar zxvf \f(CW$name\fR.tar.gz ; cd \f(CW$name\fR ; perl Makefile.PL ; make install
.PP
\&\fBFvwmTabs\fR will tell you if you do not have these packages installed when you (try to) start it.
.SH "CONFIGURATION OPTIONS"
.IX Header "CONFIGURATION OPTIONS"
\&\fBFvwmTabs\fR reads the same .fvwmrc file as \s-1FVWM\s0 when it starts up.
.PP
The following options are recognised by \fBFvwmTabs\fR:
.IP "*FvwmTabs: activeFG \fIcolor\fR" 4
.IX Item "*FvwmTabs: activeFG color"
The text color of the button for the visible tab. The default color is yellow.
.IP "*FvwmTabs: activeBG \fIcolor\fR" 4
.IX Item "*FvwmTabs: activeBG color"
The backgound color of the button for the visible tab. The default color is MidnightBlue.
.IP "*FvwmTabs: inactiveFG \fIcolor\fR" 4
.IX Item "*FvwmTabs: inactiveFG color"
The text color of the buttons for the invisible tabs. The default color is antiquewhite.
.IP "*FvwmTabs: inactiveBG \fIcolor\fR>" 4
.IX Item "*FvwmTabs: inactiveBG color>"
The backgound color of the buttons for the invisible tabs. The default color is royalblue.
.IP "*FvwmTabs: titleFG \fIcolor\fR" 4
.IX Item "*FvwmTabs: titleFG color"
The text color used in the titlebar. The default color is black.
.IP "*FvwmTabs: titleBG \fIcolor\fR" 4
.IX Item "*FvwmTabs: titleBG color"
The background color used in the titlebar. The default color is antiquewhite.
.IP "*FvwmTabs: activeRelief \fIstyle\fR" 4
.IX Item "*FvwmTabs: activeRelief style"
The relief style to use for active buttons. \fIstyle\fR can be either \fIraised\fR, \fIflat\fR or \fIsunken\fR. The default style is \fIsunken\fR.
.IP "*FvwmTabs: inactiveRelief \fIstyle\fR" 4
.IX Item "*FvwmTabs: inactiveRelief style"
The relief style to use for inactive buttons. \fIstyle\fR can be either \fIraised\fR, \fIflat\fR or \fIsunken\fR. The default style is \fIflat\fR.
.IP "*FvwmTabs: buttonYPadding \fIpixels\fR" 4
.IX Item "*FvwmTabs: buttonYPadding pixels"
How much padding to use around top and bottom of tab buttons. The default value is \fI3\fR pixels.
.IP "*FvwmTabs: pollRate \fIms\fR" 4
.IX Item "*FvwmTabs: pollRate ms"
Specifies how often to check for X events. \fIms\fR is time in milliseconds. The default value, \fI250\fR, should be fine for most users. If you are on a very slow machine you may wish to increase this.
.IP "*FvwmTabs: buttonFont \fIfont\fR" 4
.IX Item "*FvwmTabs: buttonFont font"
The font to use on the tab buttons. The default font is \fIHelvetica \-12 bold\fR.
.IP "*FvwmTabs: titleFont \fIfont\fR" 4
.IX Item "*FvwmTabs: titleFont font"
The font to use on the titlebar. The default font is \fIHelvetica \-12\fR.
.IP "*FvwmTabs: menuFont \fIfont\fR" 4
.IX Item "*FvwmTabs: menuFont font"
The font to use on the menus. The default font is \fIHelvetica \-12\fR.
.IP "*FvwmTabs: fontSelector \fIfontProgram\fR" 4
.IX Item "*FvwmTabs: fontSelector fontProgram"
The external font chooser program to launch when dynamically changing fonts. The default \fIfontProgram\fR is \fIgfontsel \-\-print \-f \*(L"%f\*(R"\fR. Anti-gnome users might try \fIxfontsel \-print \-pattern \*(L"%f\*(R"\fR. If set to \fInone\fR, no font menu options will appear.
.IP "*FvwmTabs: autoSwallowClass \fIclassName\fR [\fItabManagerId\fR], ..." 4
.IX Item "*FvwmTabs: autoSwallowClass className [tabManagerId], ..."
.PD 0
.IP "*FvwmTabs: autoSwallowResource \fIresourceName\fR [\fItabManagerId\fR], ..." 4
.IX Item "*FvwmTabs: autoSwallowResource resourceName [tabManagerId], ..."
.IP "*FvwmTabs: autoSwallowName \fIname\fR [\fItabManagerId\fR], ..." 4
.IX Item "*FvwmTabs: autoSwallowName name [tabManagerId], ..."
.PD
Specify windows to swallow automatically. These are comma-separated lists that specify the class/resource/name of a window & an optional tab-manager id into which the window should be swallowed. By default, the tab-manager id increments from zero \- ie. 0 is the first tab-manager created, 1 the second, etc, but it may be overriden by specifying an argument to the \fINewTabber\fR function. (No whitespace is allowed in tabber ids.) You can alternatively specify 'any' or 'lastFocus' which will put the window in the tab-manager with the least number of tabs or the last focused tab\-manager, respectively. If no tab-manager number is specified, an implicit default value of 'any' is used. Note that \fIclassName\fR/\fIresourceName\fR/\fIname\fR can be a (Perl) regular expression.
.IP "*FvwmTabs: balloonBG \fIcolor\fR" 4
.IX Item "*FvwmTabs: balloonBG color"
The backgound color of the balloon popups that appear over the tab buttons. The default color is \fI#C0C080\fR.
.IP "*FvwmTabs: balloonFont \fIfont\fR" 4
.IX Item "*FvwmTabs: balloonFont font"
The font to use on the balloon popups. The default font is \fIHelvetica \-12\fR.
.IP "*FvwmTabs: balloonWait \fIms\fR" 4
.IX Item "*FvwmTabs: balloonWait ms"
How long the mouse cursor must pause (in milliseconds) over a tab button before the balloon pops up. The default value is \fI250\fR. 
.IP "*FvwmTabs: balloonMsg \fImsg\fR" 4
.IX Item "*FvwmTabs: balloonMsg msg"
Message to display in balloon popups. The default value is \fI%tabNo:\en%iconText\en%title\fR.
.IP "*FvwmTabs: autoResize \fIbool\fR" 4
.IX Item "*FvwmTabs: autoResize bool"
\&\fIbool\fR can be either \fItrue\fR or \fIfalse\fR. If true, windows in the tab-manager automatically resize to the dimensions of the largest window in the tab\-manager. The default value is \fIfalse\fR. If the user performs an explicit resize of a tab-manager window, all windows in the tab-manager are resized to the new window size.
.IP "*FvwmTabs: stateFile \fIfile\fR" 4
.IX Item "*FvwmTabs: stateFile file"
\&\fBFvwmTabs\fR has the ability to preserve its state (ie. remember the windows it has swallowed as tabs) b/w \s-1FVWM\s0 restarts. \fIfile\fR specifies the name of a temporary file to record the state in, so it can be reconstructed when \fBFvwmTabs\fR restarts. The default file is \f(CW\*(C`$FVWM_USERDIR/.fvwmtabs.state\*(C'\fR.
.IP "*FvwmTabs: fixedSizeTabs \fIbool\fR" 4
.IX Item "*FvwmTabs: fixedSizeTabs bool"
\&\fIbool\fR can be either \fItrue\fR or \fIfalse\fR. If true, the tab-manager will ensure each tab-button has the same dimensions. If false, the selected tab is expanded so that it is fully visible. The default value is \fIfalse\fR.
.IP "*FvwmTabs: showTitlebar \fIbool\fR" 4
.IX Item "*FvwmTabs: showTitlebar bool"
Show internal titlebar. If set to \fItrue\fR a titlebar appears below the row of tab-buttons & displays the title associated with the current window. This titlebar is capable of displaying long or multi-line titles. The default value is \fItrue\fR.
.IP "*FvwmTabs: useTMTitlebar \fIbool\fR" 4
.IX Item "*FvwmTabs: useTMTitlebar bool"
Add the title associated with the selected tab to the tab-manager titlebar. (ie. the titlebar at the top of the window, distinct from the titlebar below the tab\-buttons.) Default value is \fItrue\fR.
.IP "*FvwmTabs: dragDropIcon \fIimageFile\fR" 4
.IX Item "*FvwmTabs: dragDropIcon imageFile"
Specify the icon to display when performing a drag\-&\-drop operation to reorder the tab\-buttons. FvwmTabs will search the ImagePath for this image unless an absolute filename (ie. filename begins with '/') is specified. The default value is \fInone\fR. If \fInone\fR (or an invalid file) is specified a * is used.
.IP "*FvwmTabs: bBuggyFocus \fIbool\fR" 4
.IX Item "*FvwmTabs: bBuggyFocus bool"
FvwmTabs tries to work around a limitation in Perl/Tk (there is no way to access the timestamp associated with \s-1WM_TAKE_FOCUS\s0 events). On some systems this doesn't work and sometimes tab-managers have trouble acquiring the focus. If this happens to you, try setting this option to \fItrue\fR. This can lead to focussing race-conditions (tab\-managers temporarily \*(L"steal\*(R" focus in some situations) but this is less annoying than not being able to focus at all.
.IP "*FvwmTabs: enableSwallowDND \fIbool\fR" 4
.IX Item "*FvwmTabs: enableSwallowDND bool"
Swallow windows that (are moved to) overlap a tabber.
Note: drag\-&\-drop can be enabled for individual tabbers via the menu.
The default value is \fItrue\fR.
.IP "*FvwmTabs: swallowDNDTolerance \fItol\fR" 4
.IX Item "*FvwmTabs: swallowDNDTolerance tol"
Determines how much a window must overlap a tabber
for it to be swallowed when drag\-&\-drop is enabled. If the value has a
%\-sign appended to it, windows must overlap by the specified percentage
of the current size of the tabber. If no %\-sign is present, the value
is treated in units of pixels.
The default value is \fI10\fR (pixels).
.IP "*FvwmTabs: useIconsOnTabs \fIbool\fR" 4
.IX Item "*FvwmTabs: useIconsOnTabs bool"
Show the mini icon associated with each window on its tab button.
Note: mini icons for apps that use \s-1EWMH\s0 icons look a bit distorted.
This is because of the poor image resizing algorithm used in Tk. This
should be rectified in the near future.
The default value is \fItrue\fR.
.IP "*FvwmTabs: killIcon \fIimage\fR" 4
.IX Item "*FvwmTabs: killIcon image"
Image to use on kill toolbar button. Default is \fInone\fR.
.IP "*FvwmTabs: addIcon \fIimage\fR" 4
.IX Item "*FvwmTabs: addIcon image"
Image to use on add toolbar button. Default is \fInone\fR.
.IP "*FvwmTabs: releaseIcon \fIimage\fR" 4
.IX Item "*FvwmTabs: releaseIcon image"
Image to use on release toolbar button. Default is \fInone\fR.
.IP "*FvwmTabs: menuIcon \fIimage\fR" 4
.IX Item "*FvwmTabs: menuIcon image"
Image to use on menu toolbar button. Default is \fInone\fR.
.SH "FVWM FUNCTIONS FOR KEY BINDINGS"
.IX Header "FVWM FUNCTIONS FOR KEY BINDINGS"
A number of \s-1FVWM\s0 functions are available once the \fBFvwmTabs\fR module is started.
.IP "NewTabber" 4
.IX Item "NewTabber"
Create a new tabber. Optional argument is tabber name. No whitespace is allowed in the tabber name. Can also prefix \-\-geometry argument.
.Sp
Example: NewTabber \-\-geometry=+200+400 scottie
.IP "Tabize" 4
.IX Item "Tabize"
Add a window (as a tab) to a tabber.
.IP "NextTab" 4
.IX Item "NextTab"
Show/select the next tab.
.IP "PrevTab" 4
.IX Item "PrevTab"
Show/select the previous tab.
.IP "LastTab" 4
.IX Item "LastTab"
Show/select the last selected tab (if there was one).
.IP "ReleaseTab" 4
.IX Item "ReleaseTab"
Release a tabbed window back to \s-1FVWM\s0.
.IP "ReleaseIconifyTab" 4
.IX Item "ReleaseIconifyTab"
Release a tabbed window back to \s-1FVWM\s0 & iconify it.
.IP "ReleaseAllTabs" 4
.IX Item "ReleaseAllTabs"
Release all windows in a tab-manager back to \s-1FVWM\s0.
.IP "ReleaseIconifyAllTabs" 4
.IX Item "ReleaseIconifyAllTabs"
Release all windows in a tab-manager back to \s-1FVWM\s0 & iconify them.
.IP "CloseTabber" 4
.IX Item "CloseTabber"
Destroy a tab\-manager. All windows in the tab-manager are released back to \s-1FVWM\s0.
.IP "AddTab" 4
.IX Item "AddTab"
Pick a new window to add to a tab\-manager. Selecting this option & clicking on a window will add the selected window to the tab\-manager.
.IP "MultiAddTab" 4
.IX Item "MultiAddTab"
Pick & add new windows to a tab-manager until \s-1ESC\s0 is pressed.
.IP "ShowTab \fItabNo\fR" 4
.IX Item "ShowTab tabNo"
Show/select tab \fItabNo\fR in the tab\-manager. \fItabNo\fR is zero\-based. ie. 0 is the first tab, 1 is the second, etc.
.IP "AddToTabber" 4
.IX Item "AddToTabber"
Add a window (as a tab) to a tab\-manager.
.IP "SwapLeft" 4
.IX Item "SwapLeft"
Swap the selected window with the window on its immediate left.
.IP "SwapRight" 4
.IX Item "SwapRight"
Swap the selected window with the window on its immediate right.
.IP "SelectTabber" 4
.IX Item "SelectTabber"
Select a tab-manager for a new window to be added to.
.IP "EnableDND" 4
.IX Item "EnableDND"
Swallow windows that (are moved to) overlap a tabber.
.SH "KEY BINDINGS"
.IX Header "KEY BINDINGS"
By default, \fBFvwmTabs\fR reads a default user configuration file \fIFvwmTabs-DefaultSetup\fR which defines several useful key-bindings for \fBFvwmTabs\fR. You can tell \fBFvwmTabs\fR \s-1NOT\s0 to read this file with \f(CW\*(C`SetEnv FvwmTabs_NoDefaultSetup\*(C'\fR \- this environment variable must be set \fIbefore\fR starting the module.
.PP
All of the key bindings can be changed using the standard \s-1FVWM\s0 \fIKey\fR command & making use of the aforementioned \s-1FVWM\s0 functions. ie.
.PP
Key (FvwmTabs*) A A \s-1CM\s0 Function AddTab
.PP
Then, pressing Ctrl-Alt-a (when the focus is in a tab\-manager) will allow you to click on a window to add to the tab\-manager.
.PP
The default key bindings (set in the \fIFvwmTabs-DefaultSetup\fR file) are:
.IP "Ctrl-Alt-a" 4
.IX Item "Ctrl-Alt-a"
AddTab
.IP "Ctrl-Alt-c" 4
.IX Item "Ctrl-Alt-c"
CloseTabber
.IP "Ctrl-Alt-i" 4
.IX Item "Ctrl-Alt-i"
ReleaseIconifyTab
.IP "Ctrl-Alt-Shift-I" 4
.IX Item "Ctrl-Alt-Shift-I"
ReleaseIconifyAllTabs
.IP "Ctrl-Alt-l" 4
.IX Item "Ctrl-Alt-l"
LastTab
.IP "Ctrl-Alt-m" 4
.IX Item "Ctrl-Alt-m"
MultiAddTab
.IP "Ctrl-Alt-n & Ctrl-Alt-Tab" 4
.IX Item "Ctrl-Alt-n & Ctrl-Alt-Tab"
NextTab
.IP "Ctrl-Alt-p" 4
.IX Item "Ctrl-Alt-p"
PrevTab
.IP "Ctrl-Alt-r" 4
.IX Item "Ctrl-Alt-r"
ReleaseTab
.IP "Ctrl-Alt-Shift-R" 4
.IX Item "Ctrl-Alt-Shift-R"
ReleaseAllTabs
.IP "Ctrl-Alt-t" 4
.IX Item "Ctrl-Alt-t"
NewTabber
.IP "Ctrl\-Alt\-\fInum\fR" 4
.IX Item "Ctrl-Alt-num"
ShowTab \fInum\fR.
.IP "Ctrl-Alt-Left" 4
.IX Item "Ctrl-Alt-Left"
SwapLeft
.IP "Ctrl-Alt-Right" 4
.IX Item "Ctrl-Alt-Right"
SwapRight
.SH "MOUSE BINDINGS"
.IX Header "MOUSE BINDINGS"
\&\fIMouse\-1\fR on a tab-button displays the window associated with the tab.
.PP
\&\fIMouse\-2\fR on a tab-button releases the window associated with the tab back to the window manager as a standalone window.
.PP
\&\fIMouse\-3\fR on a tab-button releases the window associated with the tab back to the window manager & iconifies it.
.PP
The tab-buttons can be reordered with a drag\-&\-drop operation initiated with \fICtrl\-Mouse\-2\fR. A dragged tab is inserted before the tab-button onto which it is dropped.
.SH "MENU BINDINGS"
.IX Header "MENU BINDINGS"
\&\fIMouse\-1\fR on the \*(L"menu\*(R" button will bring up a menu of options:
.PP
\&\fIRelease All\fR will release all tabbed programs back to the window manager as standalone windows.
.PP
\&\fIRelease All (Iconify)\fR will release all tabbed programs back to the window manager as iconised standalone windows.
.PP
\&\fIAdd\fR will add the next mouse-clicked window to the tab\-manager.
.PP
\&\fIAdd Next\fR will add the next window that is created to the tab\-manager.
.PP
\&\fIMulti Add\fR keeps adding mouse-clicked windows to a tab-manager until the escape key is pressed. Useful for adding multiple windows to a tab-manager at once.
.PP
\&\fIFont\fR shows a sub-menu enabling you to dynamically configure the button/title/menu fonts, using the external program identified by the \fIfontSelector\fR option.
.PP
\&\fIShow Titlebar\fR toggles the display of the titlebar below the tab\-buttons.
.PP
\&\fIWindow Tabizer Dialog\fR will popup a dialog box for specifying windows to swallow. Windows can be specified explicitly (by name) or by using a (Perl) regular expression matcher. (Note: / character is automatically escaped.)
.PP
The menu options between the separators will display the window/tab associated with the text. (The menu text is actually the title associated with the window. The text on each tab-button is the icon name.)
.PP
\&\fIAbout\fR pops up a dialog with version/developer information.
.PP
\&\fIClose\fR will close the \fBFvwmTabs\fR window, invoking Release All in the process.
.SH "BUGS"
.IX Header "BUGS"
.IP "* Tab-managers don't take focus when iconified." 4
.IX Item "Tab-managers don't take focus when iconified."
.PD 0
.ie n .IP "* FvwmTabs doesn't obey ""ClickToFocus"" mode." 4
.el .IP "* FvwmTabs doesn't obey \f(CWClickToFocus\fR mode." 4
.IX Item "FvwmTabs doesn't obey ClickToFocus mode."
.IP "* FvwmTabs has a problem swallowing shaded windows." 4
.IX Item "FvwmTabs has a problem swallowing shaded windows."
.ie n .IP "* Using ""Maximise"" to resize tab-manager windows prevents dynamic resizing from working." 4
.el .IP "* Using \f(CWMaximise\fR to resize tab-manager windows prevents dynamic resizing from working." 4
.IX Item "Using Maximise to resize tab-manager windows prevents dynamic resizing from working."
.PD
.PP
Please send bug reports, feature requests & queries about \fBFvwmTabs\fR to the \s-1FVWM\s0 Mailing list: \fIfvwm@fvwm.org\fR. Be sure to include the word \*(L"FvwmTabs\*(R" somewhere in the subject line.
.SH "TODO"
.IX Header "TODO"
Features to be added to \fBFvwmTabs\fR in the future (in no particular order):
.IP "* Colorset support. (use Colorset tracker from fvwm\-perllib)" 4
.IX Item "Colorset support. (use Colorset tracker from fvwm-perllib)"
.PD 0
.IP "* Use Ctrl\-Mouse\-1 instead of Ctrl\-Mouse\-2 to reorder (drag\-&\-drop) windows." 4
.IX Item "Use Ctrl-Mouse-1 instead of Ctrl-Mouse-2 to reorder (drag-&-drop) windows."
.IP "* option: menu item to sort tabs by name, file extension, etc." 4
.IX Item "option: menu item to sort tabs by name, file extension, etc."
.IP "* For autoSwallow options that specify a tab\-manager, create the tab-manager if it doesn't already exist. (default behaviour is not to swallow it)" 4
.IX Item "For autoSwallow options that specify a tab-manager, create the tab-manager if it doesn't already exist. (default behaviour is not to swallow it)"
.PD
.SH "FVWMTABS HOMEPAGE"
.IX Header "FVWMTABS HOMEPAGE"
There is some useful information about FvwmTabs, including a short tutorial, on the authors website:
.PP
<http://members.optusnet.com.au/~scottsmedley/fvwmtabs/>.
.SH "LICENSING"
.IX Header "LICENSING"
\&\fBFvwmTabs\fR is \s-1GPL\s0 software.
.PP
See <http://www.gnu.org/licenses/gpl.html>
.SH "AUTHOR"
.IX Header "AUTHOR"
Scott Smedley
<ss@aao.gov.au>
