.\" Automatically generated by Pod::Man v1.34, Pod::Parser v1.13
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used to
.\" do unbreakable dashes and therefore won't be available.  \*(C` and \*(C'
.\" expand to `' in nroff, nothing in troff, for use with C<>.
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "FVWMDEBUG 1"
.TH FVWMDEBUG 1 "2003-06-06" "perl v5.8.0" "FVWM Module"
.SH "NAME"
FvwmDebug \- the FVWM module debugger
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
FvwmDebug should be spawned by \fIfvwm\fR\|(1) for normal functionality.
.PP
To run this module, place this command somewhere in the configuration:
.PP
.Vb 1
\&    Module FvwmDebug [optional-params]
.Ve
.PP
To stop this module, execute:
.PP
.Vb 1
\&    KillModule FvwmDebug
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This module persistently dumps all fvwm event details and optionally some
other information into the standard error stream or a file, good for
debugging purposes. The output may be optionally redirected to \fIxconsole\fR
or similar window.
.SH "INVOCATION"
.IX Header "INVOCATION"
There are several command line switches:
.PP
\&\fBFvwmDebug\fR
[ \fB\-\-noargs\fR ]
[ \fB\-\-nonames\fR ]
[ \fB\-\-log\fR \fIfile\fR ]
[ \fB\-\-xconsole\fR ]
[ \fB\-\-mask\fR \fImask\fR ]
[ \fB\-\-xmask\fR \fImask\fR ]
[ \fB\-\-debug\fR \fIlevel\fR ]
[ \fB\-\-track\fR \fItracker-name\fR ]
[ \fB\-\-send\-configinfo\fR ]
[ \fB\-\-send\-windowlist\fR ]
.PP
Long switches may be abbreviated to shorter switches.
.PP
\&\fB\-\-noargs\fR \- do not print all event arguments, just event name.
\&\fB\-\-args\fR is the default.
.PP
\&\fB\-\-noevents\fR \- do not print even event names, implies \fB\-\-noargs\fR.
May be useful if \fB\-\-track\fR or/and \fB\-\-debug\fR is used.
.PP
\&\fB\-l\fR|\fB\-\-log\fR \fIfile\fR \- specify the log file name instead of the standard
error stream. If the log file can't be open for writting, the default
standard error stream is used. The \fIfile\fR may start with a pipe '|', this
is similar to the usual meaning of a pipe, the output is piped to the
specified command. See also \fB\-\-xconsole\fR option.
.PP
\&\fB\-xc\fR|\fB\-\-xconsole\fR \- this is a shortcut for:
.PP
.Vb 1
\&    --log '|xconsole -file /dev/stdin -geometry 600x400 -notify'
.Ve
.PP
That shows the module output in the \fIxconsole\fR window rather than
the standard error stream.
.PP
\&\fB\-m\fR|\fB\-\-mask\fR \fImask\fR \- set the module mask
.PP
\&\fB\-x\fR|\fB\-\-xmask\fR \fImask\fR \- set the module extended mask
.PP
\&\fB\-d\fR|\fB\-\-debug\fR \fIlevel\fR \- use the Perl library debugging mechanism.
The useful \fIlevel\fRs are 2 to 4.
.PP
\&\fB\-t\fR|\fB\-\-track\fR \fItracker-name\fR \- create the given Perl library tracker and
observe its main observable. This option may be specified multiple times.
If you use this option you may try \fB\-\-noevents\fR.
You may optionally try \fB\-\-debug\fR too, for example:
.PP
.Vb 1
\&    -xc --track PageInfo --track GlobalConfig --noevents --debug 3
.Ve
.PP
Run \*(L"fvwm\-perllib man\*(R" to get the names of all existing trackers in your
installed Perl library.
.PP
\&\fB\-sc\fR|\fB\-\-send\-configinfo\fR \- send \fBSend_ConfigInfo\fR command to \fIfvwm\fR
on startup, this results in a lot of events received.
.PP
\&\fB\-sw\fR|\fB\-\-send\-windowlist\fR \- send \fBSend_WindowList\fR command to \fIfvwm\fR
on startup, this results in a lot of events received.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
See also FvwmGtkDebug.
.SH "AUTHOR"
.IX Header "AUTHOR"
Mikhael Goikhman <migo@homemail.com>.
