.\" t
.\" @(#)FvwmWinList.1	1995.5.27
.TH FvwmWinList 1 "1 July 2001"
.UC
.SH NAME
FvwmWinList \- the FVWM window list module
.SH SYNOPSIS
FvwmWinList is spawned by fvwm, so no command line invocation will work.

.SH DESCRIPTION
The FvwmWinList module provides a window list made up of buttons, each
corresponding to a window that FVWM is managing.  Clicking on the buttons
with any of the three mouse buttons will either do a default action or
can be user configured.  Like the other modules, FvwmWinList only works
when fvwm is used as the window manager.

.SH COPYRIGHTS
The FvwmWinList module is the original work of Mike Finger.

Copyright 1994, Mike Finger. The author makes no guarantees or warranties of
any kind about the use of this module.  Use this modules at your own risk.
You may freely use this module or any portion of it for any purpose as long
as the copyright is kept intact.

.SH INITIALIZATION
During initialization, \fIFvwmWinList\fP will scan the same configuration file
that FVWM used during startup to find the options that pertain to it.  These
options are discussed in a later section.

.SH INVOCATION
FvwmWinList can be invoked by fvwm during initialization by inserting the
line 'Module FvwmWinList' in the .fvwmrc file.

FvwmWinList can also be bound to a keystroke, mouse button, or menu option to
be invoked later, in this case using 'Transient' as an argument will cause
FvwmWinList to resemble the built in window list.

FvwmWinList must reside in a directory that is listed in the ModulePath option
of FVWM for it to be executed by FVWM.

.SH CONFIGURATION OPTIONS
The following options can be placed in the .fvwmrc file

.IP "*FvwmWinList: Geometry \fI{+-}<X>{+-}<Y>\fP"
Specifies the location and gravity of the FvwmWinList window.  At the current
time, size is not supported and FvwmWinList will resize itself as buttons are
added.  If the NoAnchor option is not specified then the windows gravity
corner will be anchored, and the window will grow in the opposite direction.
(i.e. If the geometry is specified -5-5, that is SoutEastGravity.  This will
cause the window to draw up and to the left as windows are added)

.IP "*FvwmWinList: Font \fIfont\fP"
Specifies the font to be used for labeling the buttons.

.IP "*FvwmWinList: Colorset \fIn\fP"
Specifies the colorset to use for the buttons. See FvwmTheme. Defaults to 0.

.IP "*FvwmWinList: Fore \fIcolor\fP"
Specifies the color to use for the button names. Cancels *FvwmWinList: Colorset.

.IP "*FvwmWinList: Back \fIcolor\fP"
Specifies the color for the buttons. Cancels *FvwmWinList: Colorset.

.IP "*FvwmWinList: FocusColorset \fIn\fP"
Specifies the colorset to use for the button for the window that
has the input focus. Defaults to 1.

.IP "*FvwmWinList: FocusFore \fIcolor\fP"
Specifies the color to use for the button names for the window that
has the input focus. If omitted, the color from \fBFvwmWinListFore\fP
is used. Cancels *FvwmWinList: FocusColorset.

.IP "*FvwmWinList: FocusBack \fIcolor\fP"
Specifies the color to use for the button for the window that
has the input focus. If omitted, the color from \fBFvwmWinListBack\fP
is used. Cancels *FvwmWinList: FocusColorset.

.IP "*FvwmWinList: IconColorset \fIn\fP"
Specifies the colorset to use for buttons for windows that
are iconified. Defaults to 0.

.IP "*FvwmWinList: IconFore \fIcolor\fP"
Specifies the color to use for the button names for windows that
are iconified. If omitted, the color from \fBFvwmWinListFore\fP
is used. Cancels *FvwmWinList: IconColorset.

.IP "*FvwmWinList: IconBack \fIcolor\fP"
Specifies the color to use for the button for windows that
are iconified. If omitted, the color from \fBFvwmWinListBack\fP
is used. Cancels *FvwmWinList: IconColorset.

.IP "*FvwmWinList: DontDepressFocus"
By default FvwmWinList will show the button for the window that has the
input focus as pressed in. This option disables that feature.

.IP "*FvwmWinList: ButtonFrameWidth \fIwidth\fP"
Specify the width of the 3D borders around the buttons in FvwmWinList.

.IP "*FvwmWinList: FollowWindowList"
Specifies that FvwmWinList will keep its list in the same order as FVWM.
This is the order displayed by the "WindowList NoDeskSort" FVWM command.
This is not the default as it is more visually disturbing when the focus
changes.

.IP "*FvwmWinList: UseSkipList"
Tells FvwmWinList to not show the windows that are listed on a WindowListSkip
line in the configuration file.

.IP "*FvwmWinList: ShowCurrentDesk"
Specifies that only windows on the current desk are displayed.

.IP "*FvwmWinList: NoAnchor"
By default, FvwmWinList will anchor the gravity corner so the window will grow
in the opposite direction.  This undoes that option, i.e. the window will
always grow down.  Do not use this option if a negative geometry was
specified.

.IP "*FvwmWinList: UseIconNames"
Tells FvwmWinList to use the icon name of the window instead of the full window
name.  This is useful to keep the width of the window small.

.IP "*FvwmWinList: LeftJustify"
By default, FvwmWinList will center the icon text in the icon.  This option
causes it to be justified flush with the left edge of the icon. This option is
turned on when MiniIcons are used.

.IP "*FvwmWinList: MinWidth \fIwidth\fP"
.IP "*FvwmWinList: MaxWidth \fIwidth\fP"
Specify the minimum and maximum widths that the buttons will shrink or grow
to.  The buttons will normally size to fit the longest name, but certain
applications produce icon titles that can easily fill the screen.  Setting
these parameters constrains the size of the buttons to be between the two
values.  Setting them identically will fix the size of the buttons.
Setting Max < Min will have unpredictable results.

.IP "*FvwmWinList: TruncateLeft"
If names get truncated because of the setting of \fBFvwmWinListMaxWidth\fP,
they will normally get truncated on the right, so only the start of the names
are visible. Setting this resource will cause them to get truncated on the left,
so that the end of names are visible. This is useful when the window title
contains a directory and file name, for example.

.IP "*FvwmWinList: Action \fIaction response\fP"
Tells FvwmWinList to do \fIresponse\fP when \fIaction\fP is done.  The
currently supported \fIaction\fPs are: Click1, Click2, Click3 and so on.
By default the module supports 3 mouse buttons, but it can be compiled
to support more.  The currently
supported \fIresponse\fPs are any fvwm built-in commands, including modules
and functions.
Warning: The use of the former syntax that allowed to use comma
separated lists of commands is strongly discouraged due to synchronization
problems with fvwm.  Please use complex fvwm functions instead (defined with
the 'AddToFunc' command of fvwm).

.IP "*FvwmWinList: NoIconAction \fIaction\fP"
Tells FvwmWinList to do \fIaction\fP is when a NoIcon style window is
iconified or de-iconified. Relevant coordinates are appended to \fIaction\fP so
that the icon can be traced to an FvwmWinList button. An example action
is "*FvwmWinList: NoIconAction SendToModule FvwmAnimate animate". A blank or
null action turns this feature off.

.SH SAMPLE CONFIGURATION
The following are excepts from a .fvwmrc file which describe FvwmWinList
initialization commands:

.nf
.sp
########
# Pop up the window list in transient mode on button 3 press & hold

Mouse 3   R   A   Module FvwmWinList Transient

AddToFunc DeiconifyAndRaise
+ I Iconify off
+ I Raise

########################## Window-Lister ###############################
*FvwmWinList: Back DarkOliveGreen
*FvwmWinList: Fore PaleGoldenRod
*FvwmWinList: Font -*-new century schoolbook-bold-r-*-*-*-120-*-*-*-*-*-*
*FvwmWinList: Action Click1 Function DeiconifyAndRaise
*FvwmWinList: Action Click2 Iconify
*FvwmWinList: Action Click3 Module FvwmIdent
*FvwmWinList: UseSkipList
*FvwmWinList: UseIconNames
*FvwmWinList: Geometry -50-85
*FvwmWinList: MinWidth 70
*FvwmWinList: MaxWidth 120
# I prefer the text centered
#*FvwmWinList: LeftJustify
# I like it anchored
#*FvwmWinList: NoAnchor
# A flat list in most recently focused order
#*FvwmWinList: FollowWindowList
#*FvwmWinList: BorderReliefWidth 0
# pretend to be a taskbar
*FvwmWinList: NoIconAction SendToModule FvwmAnimate animate

.sp
.fi

.SH AUTHOR
Mike Finger (mfinger@mermaid.micro.umn.edu)
            (Mike_Finger@atk.com)
            (doodman on IRC, check the #linux channel)

Various Patches by
   John Heidemann <johnh@ficus.CS.UCLA.EDU> and
   Jason L Tibbitts <tibbs@tcamc.uh.edu>.
