dnl Process this file with autoconf to produce a configure script.
dnl
AC_PREREQ(2.13)
AC_INIT(fvwm/fvwm.c)
AM_INIT_AUTOMAKE(fvwm, 2.3.0)
AM_CONFIG_HEADER(config.h)

FVWM_MODULEDIR='${libexecdir}/${PACKAGE}/${VERSION}'
FVWM_CONFIGDIR='${sysconfdir}'

AC_SUBST(FVWM_MODULEDIR)
AC_SUBST(FVWM_CONFIGDIR)

AC_ARG_ENABLE(extras,
[  --enable-extras         build the extra modules by default])
test "$enable_extras" = "yes" && EXTRA_MODULES=extras
test -z "$enable_extras" && enable_extras=no
AC_SUBST(EXTRA_MODULES)

dnl Various configure-time options
dnl
smr_SWITCH(modality, modal dialogs for applications, on, , MODALITY_IS_EVIL)
smr_SWITCH(saveunder, saveunders for pop-up menus, on, , NO_SAVEUNDERS)
smr_SWITCH(shape, shape extensions, on, SHAPE)
smr_SWITCH(activedown-button, ActiveDown button state, on, ACTIVEDOWN_BTNS)
smr_SWITCH(inactive-button, Inactive button state, on, INACTIVE_BTNS)
smr_SWITCH(mini-icons, MiniIcon style option, on, MINI_ICONS)
smr_SWITCH(vector-buttons, vector button style, on, VECTOR_BUTTONS)
smr_SWITCH(pixmap-buttons, pixmap button style, on, PIXMAP_BUTTONS)
smr_SWITCH(gradient-buttons, gradient button style, on, GRADIENT_BUTTONS)
smr_SWITCH(multistyle, stacked button styles, on, MULTISTYLE)
smr_SWITCH(extended-titlestyle, styled title-bars, on, EXTENDED_TITLESTYLE)
smr_SWITCH(borderstyle, BorderStyle command, on, BORDERSTYLE)
smr_SWITCH(usedecor, UseDecor style option, on, USEDECOR)
smr_SWITCH(windowshade, WindowShade function, on, WINDOWSHADE)
smr_SWITCH(debug-msgs, debugging messages, off, FVWM_DEBUG_MSGS)

dnl FIXME: default value should be derived from computed path to X
dnl includes.  Actually, this should probably not appear in configure
dnl at all: it is settable at runtime, and only confuses the issue to
dnl have it settable here too.
dnl
AC_MSG_CHECKING(imagepath)
val="/usr/include/X11/bitmaps:/usr/include/X11/pixmaps"
AC_ARG_WITH(imagepath,
[  --with-imagepath=PATH    colon-delimited search path for images],
[ case "$withval" in
  no)
    AC_MSG_ERROR(Can not disable image path.)
    ;;
  yes)
    ;;
  *)
    val="$withval"
    ;;
  esac ])
AC_DEFINE_UNQUOTED(FVWM_IMAGEPATH, "$val")
AC_MSG_RESULT($val)


dnl Minimal checks for programs: enough to enable checking for
dnl optional libraries.
AC_PROG_CC
AC_PROG_CPP

dnl Help finding POSIX functions on some systems
AC_ISC_POSIX
AC_MINIX

dnl Check for REQUIRED headers and functions before going any
dnl further.

dnl The module interface uses variadic functions for message passing.
AC_CHECK_HEADERS(stdarg.h)
AC_CHECK_FUNCS(vfprintf)
if test $ac_cv_header_stdarg_h = no -o \
        $ac_cv_func_vfprintf = no; then
     AC_MSG_ERROR(stdarg.h and vfprintf required.)
fi

dnl For reaping children, fvwm needs either waitpid() or wait3()
dnl Some extra modules may need wait4() too
AC_CHECK_FUNCS(waitpid)
if test $ac_cv_func_waitpid = no; then
    AC_CHECK_FUNCS(wait3 wait4)
    if test $ac_cv_func_wait3 = no; then
        AC_MSG_ERROR(Either waitpid or wait3 function is required)
    fi
fi

dnl Make the C++ compiler optional, for it is only used in a
dnl module, not for the main code.
AC_ARG_WITH(cxx,
[  --without-cxx           disable probing for C++ compiler])

if test "$with_cxx" != no; then
    if test "$with_cxx" -a "$with_cxx" != yes; then
        CCC=$with_cxx
# disable the cached value before probing
        unset ac_cv_prog_CXX
        AC_CHECK_PROGS(CXX, $CCC)
        test "$CXX" ||
            AC_MSG_ERROR(C++ compiler given by --with-cxx not found)
    else
        AC_CHECK_PROGS(CXX, $CCC c++ g++ gcc CC cxx cc++)
    fi
    if test "$CXX"; then
        AC_MSG_RESULT(Using $CXX to compile C++ programs)
        with_cxx=yes
        AC_PROG_CXX
    fi
fi

dnl Need to know where X is, for finding libraries
AC_PATH_XTRA

dnl Look harder for a C preprocessor for FvwmCpp
AC_PATH_PROG(FVWM_CPP, cpp, no, $PATH:/lib:/usr/lib:/usr/ccs/lib)
if test "$FVWM_CPP" = no; then
  FVWM_CPP=
  AC_MSG_WARN([cannot locate a C preprocessor: run FvwmCpp with -cppprog])
fi
dnl FIXME: make sure the cpp we found actually works...

dnl Finish checking for programs.
AC_PROG_INSTALL
AC_PROG_LN_S
AC_PROG_MAKE_SET
AC_PROG_RANLIB
AM_PROG_LEX
AC_PROG_YACC


dnl Checks for header files.
AC_HEADER_STDC
AC_HEADER_SYS_WAIT
AC_CHECK_HEADERS(stdlib.h fcntl.h limits.h malloc.h string.h memory.h unistd.h)
AC_CHECK_HEADERS(getopt.h sys/select.h sys/systeminfo.h)

dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_C_INLINE
AC_TYPE_OFF_T
AC_TYPE_PID_T
AC_TYPE_SIZE_T
dnl AC_HEADER_TIME
dnl AC_STRUCT_TM

dnl Checks for library functions.
AC_TYPE_SIGNAL
AC_FUNC_STRFTIME
AC_CHECK_FUNCS(gettimeofday mkfifo putenv select setvbuf socket waitpid)
AC_CHECK_FUNCS(strdup strstr strtol memmove memcpy strchr sysconf uname div)
AC_CHECK_FUNCS(sigaction siginterrupt)

pds_CHECK_TYPE(sig_atomic_t, int, [#include <signal.h>])

if test $ac_cv_func_setvbuf = yes; then
  AC_FUNC_SETVBUF_REVERSED
fi

if test $ac_cv_func_select = yes; then
  dnl Workaround for autoconf 2.13 bug: these headers are used (if
  dnl present on the system) for the SELECT_ARGTYPES probe.
  AC_CHECK_HEADERS(sys/types.h sys/time.h sys/select.h sys/socket.h)
  AC_FUNC_SELECT_ARGTYPES
fi

dnl Check for standard functions that we have replacements for.
AC_REPLACE_FUNCS(gethostname strcasecmp strncasecmp strerror usleep atexit)
AC_SUBST(LIBOBJS)

dnl If we do not have atexit(), then check for on_exit()
if test $ac_cv_func_atexit = no; then
  AC_CHECK_FUNCS(on_exit)
fi

dnl Checking for optional libraries
dnl Default is to use them if found; can be disable using --without

unset ac_cv_header_X11_xpm_h
unset ac_cv_lib_Xpm_XpmReadFileToXpmImage
smr_CHECK_LIB(xpm, Xpm, for coloured or shaped icons,
    XpmReadFileToXpmImage, X11/xpm.h,
    [$X_LIBS $X_PRE_LIBS -lX11 $X_EXTRA_LIBS], $X_CFLAGS)

xpm_problem=": Xpm library or header not found!"

if test "$xpm_LIBS"; then
  dnl Check for proper version of Xpm -- from XEmacs 21.x configure.in
  xpm_problem=""
  AC_MSG_CHECKING(for Xpm 3.4f or better)
  my_CPPFLAGS="$CPPFLAGS"
  my_LIBS="$LIBS"
  CPPFLAGS="$CPPFLAGS $xpm_CFLAGS $X_CFLAGS"
  LIBS="$LIBS $xpm_LIBS $X_LIBS $X_PRE_LIBS -lX11 $X_EXTRA_LIBS"
  AC_TRY_RUN([#include <X11/xpm.h>
   int main(int c, char **v) {
   return c == 1 ? 0 :
     XpmIncludeVersion != XpmLibraryVersion() ? 1 :
     XpmIncludeVersion < 30406 ? 2 : 0 ;}],
    [./conftest dummy_arg; xpm_status=$?;
     if test "$xpm_status" = "0"; then
       with_xpm=yes;
     else
       with_xpm=no;
       if test "$xpm_status" = "1"; then
	 xpm_problem=": Xpm library version and header file version don't match!"
       elif test "$xpm_status" = "2"; then
	 xpm_problem=": Xpm library version is too old!"
       else
	 xpm_problem=": Internal xpm detection logic error!"
       fi
     fi],
   [with_xpm=no])
  AC_MSG_RESULT($with_xpm)
  CPPFLAGS="$my_CPPFLAGS"
  LIBS="$my_LIBS"

  if test "$with_xpm" = yes; then
    AC_DEFINE(XPM)
    FVWMBANNER=FvwmBanner AC_SUBST(FVWMBANNER)
    XPMROOT=xpmroot AC_SUBST(XPMROOT)
    FVWMSCRIPT=FvwmScript AC_SUBST(FVWMSCRIPT)

    # This one needs BOTH C++ and Xpm
    if test "$with_cxx" = yes; then
	FVWMCONFIG=FvwmConfig AC_SUBST(FVWMCONFIG)
    fi
  else
    xpm_LIBS=
    xpm_CFLAGS=
  fi
fi
AC_SUBST(xpm_LIBS)
AC_SUBST(xpm_CFLAGS)

unset ac_cv_header_rplay_h
unset ac_cv_lib_rplay_rplay_create
dnl Add in X_EXTRA_LIBS here to get things like connect().
smr_CHECK_LIB(rplay, , adds audio capability, rplay_create, rplay.h,
	      $X_EXTRA_LIBS)

test "$rplay_LIBS" && AC_DEFINE(HAVE_RPLAY)
AC_SUBST(rplay_LIBS)
AC_SUBST(rplay_CFLAGS)

dnl FIXME: should compute availability of termcap
dnl Forget cached values, so user can re-run configure
unset ac_cv_header_readline_readline_h
unset ac_cv_lib_readline_readline
smr_CHECK_LIB(readline, , , readline, readline/readline.h, -ltermcap)
if test "$readline_LIBS"; then
  readline_LIBS="$readline_LIBS -ltermcap"
  AC_DEFINE(HAVE_READLINE)
else
  # We couldn't use readline with termcap; try with ncurses?
  dnl FIXME: should compute availability of ncurses
  dnl also: doesn't this seem a hacky way to do this??
  dnl unset cached values from last check...
  unset ac_cv_header_readline_readline_h
  unset ac_cv_lib_readline_readline
  smr_CHECK_LIB(readline, , , readline, readline/readline.h, -lncurses)
  if test "$readline_LIBS"; then
    readline_LIBS="$readline_LIBS -lncurses"
    AC_DEFINE(HAVE_READLINE)
  fi
fi
AC_SUBST(readline_LIBS)
AC_SUBST(readline_CFLAGS)

dnl Check the availability of SM
dnl We don't have to add any extra libraries, since
dnl -lSM -lICE are in X_PRE_LIBS when they exist.
AC_CHECK_LIB(SM, SmcOpenConnection, AC_DEFINE(SESSION), , 
             [$X_LIBS $X_PRE_LIBS -lX11 $X_EXTRA_LIBS])

AC_OUTPUT(Makefile libs/Makefile fvwm/Makefile modules/Makefile
extras/Makefile utils/Makefile docs/Makefile
icons/Makefile sample.fvwmrc/Makefile tests/Makefile
dnl
modules/FvwmAnimate/Makefile
modules/FvwmAudio/Makefile
modules/FvwmAuto/Makefile
modules/FvwmBacker/Makefile
modules/FvwmBanner/Makefile
modules/FvwmButtons/Makefile
modules/FvwmCpp/Makefile
modules/FvwmEvent/Makefile
modules/FvwmForm/Makefile
modules/FvwmIconBox/Makefile
modules/FvwmIconMan/Makefile
modules/FvwmIdent/Makefile
modules/FvwmM4/Makefile
modules/FvwmPager/Makefile
modules/FvwmRearrange/Makefile
modules/FvwmSave/Makefile
modules/FvwmSaveDesk/Makefile
modules/FvwmScroll/Makefile
modules/FvwmTalk/Makefile
modules/FvwmWinList/Makefile
dnl
extras/FvwmCommand/Makefile
extras/FvwmConfig/Makefile
extras/FvwmConsole/Makefile
extras/FvwmDebug/Makefile
extras/FvwmGoodStuff/Makefile
extras/FvwmPipe/Makefile
extras/FvwmScript/Makefile
extras/FvwmScript/Scripts/Makefile
extras/FvwmScript/Scripts/some_nice_icons/Makefile
extras/FvwmScript/Widgets/Makefile
extras/FvwmTaskBar/Makefile
extras/FvwmWharf/Makefile
)

echo "
Configuration:

  FVWM Version:             $VERSION

  Build extra modules?      $enable_extras
  Have ReadLine support?    $with_readline
  Have RPlay support?	    $with_rplay
  Have XPM support? 	    $with_xpm$xpm_problem
"
