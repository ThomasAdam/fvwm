dnl Process this file with autoconf to produce a configure script.
dnl
AC_INIT(fvwm/fvwm.c)
AM_INIT_AUTOMAKE(fvwm, 2.1.0)
AM_CONFIG_HEADER(config.h)

FVWM_MODULEDIR='${libexecdir}/${PACKAGE}/${VERSION}'
FVWM_CONFIGDIR='${sysconfdir}'

AC_SUBST(FVWM_MODULEDIR)
AC_SUBST(FVWM_CONFIGDIR)

AC_ARG_ENABLE(extras,
[  --enable-extras         build the extra modules by default])
test "${enable_extras}" = "yes" && EXTRA_MODULES=extras
AC_SUBST(EXTRA_MODULES)

dnl Various configure-time options
dnl
smr_SWITCH(modality, modal dialogs for applications, on, , MODALITY_IS_EVIL)
smr_SWITCH(saveunder, saveunders for pop-up menus, on, , NO_SAVEUNDERS)
smr_SWITCH(shape, shape extensions, on, SHAPE)
smr_SWITCH(activedown-button, ActiveDown button state, on, ACTIVEDOWN_BTNS)
smr_SWITCH(inactive-button, Inactive button state, on, INACTIVE_BTNS)
smr_SWITCH(mini-icons, MiniIcon style option, on, MINI_ICONS)
smr_SWITCH(vector-buttons, vector button style, on, VECTOR_BUTTONS)
smr_SWITCH(pixmap-buttons, pixmap button style, on, PIXMAP_BUTTONS)
smr_SWITCH(gradient-buttons, gradient button style, on, GRADIENT_BUTTONS)
smr_SWITCH(multistyle, stacked button styles, on, MULTISTYLE)
smr_SWITCH(extended-titlestyle, styled title-bars, on, EXTENDED_TITLESTYLE)
smr_SWITCH(borderstyle, BorderStyle command, on, BORDERSTYLE)
smr_SWITCH(usedecor, UseDecor style option, on, USEDECOR)
smr_SWITCH(windowshade, WindowShade function, on, WINDOWSHADE)
smr_SWITCH(debug-msgs, debugging messages, off, FVWM_DEBUG_MSGS)

dnl FIXME: default value should be derived from computed path to X
dnl includes.  Actually, this should probably not appear in configure
dnl at all: it is settable at runtime, and only confuses the issue to 
dnl have it settable here too.
dnl
AC_MSG_CHECKING(iconpath)
val="/usr/include/X11/bitmaps:/usr/include/X11/pixmaps"
AC_ARG_WITH(iconpath,
[  --with-iconpath=PATH    colon-delimited search path for icons],
[ case "$withval" in
  no)
    AC_MSG_ERROR(Can not disable icon path.)
    ;;
  yes)
    ;;
  *)
    val="$withval"
    ;;
  esac ])
AC_DEFINE_UNQUOTED(FVWM_ICONDIR, "$val")
AC_MSG_RESULT($val)


dnl Minimal checks for programs: enough to enable checking for
dnl optional libraries.
AC_PROG_CC
AC_PROG_CPP

dnl Make the C++ compiler optional, for it is only used in a
dnl module, not for the main code.
AC_ARG_WITH(cxx,
[  --without-cxx           disable probing for C++ compiler])

if test "$with_cxx" != no; then
    if test "$with_cxx" -a "$with_cxx" != yes; then
	CCC=$with_cxx 
# disable the cached value before probing
	unset ac_cv_prog_CXX
	AC_CHECK_PROGS(CXX, $CCC)
	test "$CXX" || 
	    AC_MSG_ERROR(C++ compiler given by --with-cxx not found)
    else
	AC_CHECK_PROGS(CXX, $CCC c++ g++ gcc CC cxx cc++)
    fi
    if test "$CXX"; then
	AC_MSG_RESULT(Using $CXX to compile C++ programs)
	with_cxx=yes
	AC_PROG_CXX
    fi
fi

dnl Need to know where X is, for finding libraries
AC_PATH_XTRA

dnl Checking for optional libraries
dnl Default is to use them if found; can be disable using --without

smr_CHECK_LIB(xpm, Xpm, for coloured or shaped icons, 
    XpmReadFileToXpmImage, X11/xpm.h,
    [$X_LIBS $X_PRE_LIBS -lX11 $X_EXTRA_LIBS], $X_CFLAGS)
if test "$xpm_LIBS"; then
    AC_DEFINE(XPM)
    FVWMBANNER=FvwmBanner AC_SUBST(FVWMBANNER)
    XPMROOT=xpmroot AC_SUBST(XPMROOT)
    XPMREDUCE=xpm-reduce AC_SUBST(XPMREDUCE)
    FVWMSCRIPT=FvwmScript AC_SUBST(FVWMSCRIPT)
dnl
    # This one needs BOTH C++ and Xpm
    if test "$with_cxx" = yes; then
	FVWMCONFIG=FvwmConfig AC_SUBST(FVWMCONFIG)
    fi
fi
AC_SUBST(xpm_LIBS) 
AC_SUBST(xpm_CFLAGS)

smr_CHECK_LIB(rplay, , adds audio capability, rplay_create, rplay.h)
test "$rplay_LIBS" && AC_DEFINE(HAVE_RPLAY)
AC_SUBST(rplay_LIBS) 
AC_SUBST(rplay_CFLAGS) 

dnl FIXME: should compute availability of termcap
smr_CHECK_LIB(readline, , , readline, readline/readline.h, -ltermcap)
if test "$readline_LIBS"; then
    readline_LIBS="$readline_LIBS -ltermcap"
    AC_DEFINE(HAVE_READLINE)
fi
AC_SUBST(readline_LIBS)
AC_SUBST(readline_CFLAGS)

dnl The FvwmCpp module needs the exact pathname for CPP.
AC_PATH_PROG(FVWM_CPP, cpp, /lib/cpp, $PATH:/lib:/usr/lib)

dnl Finish checking for programs.
AM_PROG_INSTALL
AC_PROG_LN_S
AC_PROG_MAKE_SET
AC_PROG_RANLIB

dnl Checks for header files.
AC_HEADER_STDC
AC_HEADER_SYS_WAIT
AC_CHECK_HEADERS(fcntl.h limits.h malloc.h strings.h unistd.h)
AC_CHECK_HEADERS(getopt.h sys/select.h sys/systeminfo.h)

dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_C_INLINE
dnl AC_TYPE_OFF_T
dnl AC_TYPE_PID_T
AC_TYPE_SIZE_T
dnl AC_HEADER_TIME
dnl AC_STRUCT_TM

dnl Checks for library functions.
AC_FUNC_SETVBUF_REVERSED
AC_TYPE_SIGNAL
AC_FUNC_STRFTIME
AC_FUNC_VPRINTF
AC_CHECK_FUNCS(gethostname gettimeofday mkfifo putenv select socket)
AC_CHECK_FUNCS(strdup strerror strstr strtol sysconf uname waitpid wait4)

AC_REPLACE_FUNCS(usleep)
AC_SUBST(LIBOBJS)

dnl For reaping children, fvwm needs either waitpid() or wait3()
if test $ac_cv_func_waitpid = no; then
    AC_CHECK_FUNCS(wait3)
    if test $ac_cv_func_wait3 = no; then
	AC_MSG_ERROR(Either waitpid or wait3 function is required)
    fi
fi

dnl According to Dan Espen <dane@mk.bellcore.com>, solaris needs
dnl -lsocket to find socket routines.  The logic below mimics that found
dnl in AC_PATH_XTRA.
AC_CHECK_FUNC(connect)
if test $ac_cv_func_connect = no; then
    AC_CHECK_LIB(socket, connect, socket_LIBS="-lsocket")
fi
AC_SUBST(socket_LIBS)

AC_OUTPUT(Makefile libs/Makefile fvwm/Makefile modules/Makefile
modules/FvwmM4/Makefile modules/FvwmBanner/Makefile
modules/FvwmCpp/Makefile modules/FvwmForm/Makefile
modules/FvwmEvent/Makefile modules/FvwmAnimate/Makefile
modules/FvwmSave/Makefile modules/FvwmIdent/Makefile
modules/FvwmPager/Makefile modules/FvwmWinList/Makefile
modules/FvwmScroll/Makefile modules/FvwmBacker/Makefile
modules/FvwmTalk/Makefile modules/FvwmAudio/Makefile
modules/FvwmIconBox/Makefile modules/FvwmSaveDesk/Makefile
modules/FvwmAuto/Makefile modules/FvwmButtons/Makefile
modules/FvwmIconMan/Makefile modules/FvwmCascade/Makefile
modules/FvwmTile/Makefile 
docs/Makefile icons/Makefile sample.fvwmrc/Makefile
extras/Makefile textures/Makefile
extras/FvwmCommand/Makefile extras/FvwmConfig/Makefile
extras/FvwmConsole/Makefile extras/FvwmDebug/Makefile
extras/FvwmGoodStuff/Makefile extras/FvwmPipe/Makefile
extras/FvwmScript/Makefile 
extras/FvwmScript/Scripts/Makefile 
extras/FvwmScript/Scripts/some_nice_icons/Makefile 
extras/FvwmScript/Widgets/Makefile
extras/FvwmTaskBar/Makefile
extras/FvwmWharf/Makefile extras/fvwmperl/Makefile
extras/fvwmpython/Makefile
utils/Makefile xpmroot/Makefile)
