.rn '' }`
''' $RCSfile: fvwm-menu-xlock.1,v $$Revision: 1.7 $$Date: 1999/08/19 04:20:07 $
'''
''' $Log: fvwm-menu-xlock.1,v $
''' Revision 1.7  1999/08/19 04:20:07  migo
''' fixed dependences of the man pages
'''
''' Revision 1.8  1999/08/23 20:37:24  migo
''' * fixed bad allocation and fvwm hang for menu labels with more than two TABs
''' * fvwm-menu-directory: new option --format (%s, %d, %n etc.); extended --title
''' * fvwm-menu-xlock: new options --format and --special-first
''' * fvwm_make_browse_menu.sh: improved the simulation command line
'''
''' Revision 1.9  1999/08/26 01:10:10  domivogt
''' * Drastically reduced warping area when resizing interactively.
''' * Applied condition patch for WindowList.
''' * Fixed border drawing with HandleWidth 1.
''' * Fixed drawing of plain buttons in FvwmButtons.
''' * IconMan can be resized vertically too if specified not to grow itself.
''' * Fix FvwmCommand with $HOME or $DISPLAY missing.
'''
'''
.de Sh
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp
.if t .sp .5v
.if n .sp
..
.de Ip
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.de Vb
.ft CW
.nf
.ne \\$1
..
.de Ve
.ft R

.fi
..
'''
'''
'''     Set up \*(-- to give an unbreakable dash;
'''     string Tr holds user defined translation string.
'''     Bell System Logo is used as a dummy character.
'''
.tr \(*W-|\(bv\*(Tr
.ie n \{\
.ds -- \(*W-
.ds PI pi
.if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\" diablo 12 pitch
.ds L" ""
.ds R" ""
'''   \*(M", \*(S", \*(N" and \*(T" are the equivalent of
'''   \*(L" and \*(R", except that they are used on ".xx" lines,
'''   such as .IP and .SH, which do another additional levels of
'''   double-quote interpretation
.ds M" """
.ds S" """
.ds N" """""
.ds T" """""
.ds L' '
.ds R' '
.ds M' '
.ds S' '
.ds N' '
.ds T' '
'br\}
.el\{\
.ds -- \(em\|
.tr \*(Tr
.ds L" ``
.ds R" ''
.ds M" ``
.ds S" ''
.ds N" ``
.ds T" ''
.ds L' `
.ds R' '
.ds M' `
.ds S' '
.ds N' `
.ds T' '
.ds PI \(*p
'br\}
.\"	If the F register is turned on, we'll generate
.\"	index entries out stderr for the following things:
.TH FVWM-MENU-XLOCK 1 "perl 5.005, patch 01" "17/Aug/99" "Fvwm Utility"
.\"		SH	Header
.\"		Sh	Subsection 
.\"		Ip	Item
.\"		X<>	Xref  (embedded
.\"	Of course, you have to process the output yourself
.TH FVWM-MENU-XLOCK 1 "perl 5.005, patch 01" "23/Aug/99" "Fvwm Utility"
.if \nF \{
.de IX
.tm Index:\\$1\t\\n%\t"\\$2"
..
.nr % 0
.rr F
.\}
.TH FVWM-MENU-XLOCK 1 "perl 5.005, patch 02" "25/Aug/99" "Fvwm Utility"
.UC
.if n .hy 0
.if n .na
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.de CQ          \" put $1 in typewriter font
.ft CW
'if n "\c
'if t \\&\\$1\c
'if n \\&\\$1\c
'if n \&"
\\&\\$2 \\$3 \\$4 \\$5 \\$6 \\$7
'.ft R
..
.\" @(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2
.	\" AM - accent mark definitions
.bd B 3
.	\" fudge factors for nroff and troff
.if n \{\
.	ds #H 0
.	ds #V .8m
.	ds #F .3m
.	ds #[ \f1
.	ds #] \fP
.\}
.if t \{\
.	ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.	ds #V .6m
.	ds #F 0
.	ds #[ \&
.	ds #] \&
.\}
.	\" simple accents for nroff and troff
.if n \{\
.	ds ' \&
.	ds ` \&
.	ds ^ \&
.	ds , \&
.	ds ~ ~
.	ds ? ?
.	ds ! !
.	ds /
.	ds q
.\}
.if t \{\
.	ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.	ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.	ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.	ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.	ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.	ds ? \s-2c\h'-\w'c'u*7/10'\u\h'\*(#H'\zi\d\s+2\h'\w'c'u*8/10'
.	ds ! \s-2\(or\s+2\h'-\w'\(or'u'\v'-.8m'.\v'.8m'
.	ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.	ds q o\h'-\w'o'u*8/10'\s-4\v'.4m'\z\(*i\v'-.4m'\s+4\h'\w'o'u*8/10'
.\}
.	\" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds v \\k:\h'-(\\n(.wu*9/10-\*(#H)'\v'-\*(#V'\*(#[\s-4v\s0\v'\*(#V'\h'|\\n:u'\*(#]
.ds _ \\k:\h'-(\\n(.wu*9/10-\*(#H+(\*(#F*2/3))'\v'-.4m'\z\(hy\v'.4m'\h'|\\n:u'
.ds . \\k:\h'-(\\n(.wu*8/10)'\v'\*(#V*4/10'\z.\v'-\*(#V*4/10'\h'|\\n:u'
.ds 3 \*(#[\v'.2m'\s-2\&3\s0\v'-.2m'\*(#]
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.ds oe o\h'-(\w'o'u*4/10)'e
.ds Oe O\h'-(\w'O'u*4/10)'E
.	\" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.	\" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.	ds : e
.	ds 8 ss
.	ds v \h'-1'\o'\(aa\(ga'
.	ds _ \h'-1'^
.	ds . \h'-1'.
.	ds 3 3
.	ds o a
.	ds d- d\h'-1'\(ga
.	ds D- D\h'-1'\(hy
.	ds Th \o'LP'
.	ds Ae AE
.	ds oe oe
.	ds Oe OE
.\}
.rm #[ #] #H #V #F C
.SH "NAME"
fvwm-menu-xlock \- builds xlock menu definition for FVWM
.SH "SYNOPSIS"
\fBfvwm-menu-xlock\fR
[ \fB--name\fR|\fB\-n\fR name ]
[ \fB--title\fR|\fB\-t\fR title ]
[ \fB--format\fR|\fB\-f\fR format ]
[ \fB--icon\fR|\fB\-i\fR icon ]
title \*(L"XLock Modes\*(R" and no mini-icon (equivalent to an empty icon argument).
Short options are ok if not ambiguous: \-h, \-n.
double backslash or a real TAB.
.PP
Format specifiers:
  \f(CW%n\fR \- mode name
  \f(CW%d\fR \- mode description
  \f(CW%D\fR \- mode description without \*(L"Shows \*(L" prefix if any
.PP
\fB--special-first\fR \- instructs to include special modes (usually black,
bomb and random) first.
.PP
Option parameters can be specified both using \*(L'=\*(R' and in the next argument.
Short options are ok if not ambiguous: \-h, \-t; but be careful with
short options, what is now unambiguous, can became ambiguous in the next
versions.
.PP
Additional arguments (after \fB--\fR) will be passed to xlock.
.PP
Please see the \fBxlock\fR(1) man page for the xlock options.
.SH "USAGE"
Add these lines to your fvwm configuration file:
.PP
.Vb 6
\&  PipeRead 'fvwm-menu-xlock -n MenuSSaver -t "Screensaver" \e
\&    -i mini-bball.xpm -- -nice 19 -nolock'
\&  PipeRead 'fvwm-menu-xlock -n MenuSLock  -t "Lock Screen" \e
\&    -i mini-rball.xpm -- -nice 19'
\&  AddToMenu "Utilities" "Screensaver%mini-monitor.xpm%" Popup MenuSSaver
\&  AddToMenu "Utilities" "Screenlock%mini-lock.xpm%"     Popup MenuSLock
.Ve
.SH "AUTHORS"
Charles K. Hines <chuck_hines@vnet.ibm.com>, initial version.
.PP
Mikhael Goikhman <migo@homemail.com>, 24 Feb 1999.
.PP
Mikhael Goikhman <migo@homemail.com>, 02 Aug 1999.
.SH "COPYING"
The script is distributed by the same terms as fvwm itself.
See GNU General Public License for details.
.SH "BUGS"
Depends on the output of xlock. Will produce an empty menu if the structure
of the output is changed.
.PP
Report bugs to fvwm-bug@fvwm.org.

.rn }` ''
.IX Title "FVWM-MENU-XLOCK 1"
.IX Name "fvwm-menu-xlock - builds xlock menu definition for FVWM"

.IX Header "NAME"

.IX Header "SYNOPSIS"

.IX Header "DESCRIPTION"

.IX Header "OPTIONS"

.IX Header "USAGE"

.IX Header "AUTHORS"

.IX Header "COPYING"

.IX Header "BUGS"

