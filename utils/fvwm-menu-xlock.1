.\" Automatically generated by Pod::Man version 1.02
.\" Tue Mar 20 05:16:19 2001
.\"
.\" Standard preamble:
.\" ======================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R

.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used
.\" to do unbreakable dashes and therefore won't be available.  \*(C` and
.\" \*(C' expand to `' in nroff, nothing in troff, for use with C<>
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` `
.    ds C' '
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr
.\" for titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and
.\" index entries marked with X<> in POD.  Of course, you'll have to process
.\" the output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
.    .
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it
.\" makes way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.bd B 3
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ======================================================================
.\"
.IX Title "FVWM-MENU-XLOCK 1"
.TH FVWM-MENU-XLOCK 1 "perl v5.6.0" "2001-03-20" "Fvwm Utility"
.UC
.SH "NAME"
fvwm-menu-xlock \- builds xlock menu definition for \s-1FVWM\s0
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
\&\fBfvwm-menu-xlock\fR
[ \fB\*(--help\fR|\fB\-h\fR ]
[ \fB\*(--version\fR|\fB\-v\fR ]
[ \fB\*(--name\fR|\fB\-n\fR name ]
[ \fB\*(--title\fR|\fB\-t\fR title ]
[ \fB\*(--item\fR format ]
[ \fB\*(--icon-title\fR icon ]
[ \fB\*(--icon-item\fR icon ]
[ \fB\*(--special-first\fR|\fB\-s\fR ]
[ \*(-- xlock params ]
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
A simple perl script which parses xlock's output to build an fvwm 2.xx
menu definition of all xlock's modes.
.SH "OPTIONS"
.IX Header "OPTIONS"
\&\fB\*(--help\fR    \- show the help and exit
.PP
\&\fB\*(--version\fR \- show the version and exit
.PP
\&\fB\*(--name\fR name \- define menu name in the following argument.
Default is \*(L"XLockMenu\*(R"
.PP
\&\fB\*(--title\fR title \- define menu title in the following argument.
Default is \*(L"XLock Modes\*(R".
.PP
\&\fB\*(--item\fR format \- define menu item format in the following argument,
default is '%n\et(%d)'. \s-1TAB\s0 can be specified as '\et', but in fvwmrc
you should specify a double backslash or a real \s-1TAB\s0.
.PP
Format specifiers:
  \f(CW%n\fR \- mode name
  \f(CW%d\fR \- mode description
  \f(CW%D\fR \- mode description without \*(L"Shows \*(R" prefix if any
.PP
These specifiers can receive an optional integer size, positive for right
adjusted string or negative for left adjusted, example: \f(CW%8x\fR; and optional
*num or *\-num, which means to leave only the first or last (if minus) num of
chars, the num must be greater than 3, since the striped part is replaced
with \*(L"...\*(R", example: %*30x. Both can be combined: %\-10*\-20x, this instructs to
get only the 20 last characters, but if the length is less then 10 \- to fill
with up to 10 spaces on the right.
.PP
\&\fB\*(--icon-title\fR, \fB\*(--icon-item\fR \- define menu icon for title and regular item
accordingly given in the following argument. Default is no menu icons
(equivalent to an empty icon argument).
.PP
\&\fB\*(--wm-icons\fR \- define icon names suitable for use with wm-icons package.
Currently this is equivalent to: \-\-icon-title '' \-\-icon-item
menu/lock.xpm.
.PP
\&\fB\*(--special-first\fR \- instructs to include special modes (usually black,
bomb and random) first.
.PP
Option parameters can be specified both using '=' and in the next argument.
Short options are ok if not ambiguous: \-h, \-t; but be careful with
short options, what is now unambiguous, can became ambiguous in the next
versions.
.PP
Additional arguments (after \fB\--\fR) will be passed to xlock.
.PP
Please see the \fBxlock\fR(1) man page for the xlock options.
.SH "USAGE"
.IX Header "USAGE"
Add these lines to your fvwm configuration file:
.PP
.Vb 6
\&  PipeRead 'fvwm-menu-xlock --name MenuSSaver --title "Screensaver" \e
\&    --icon-item mini-bball.xpm --special-first -- -nice 19 -nolock'
\&  PipeRead 'fvwm-menu-xlock --name MenuSLock --title "Lock Screen" \e
\&    --icon-item mini-rball.xpm --special-first -- -nice 19'
\&  AddToMenu "Utilities" "Screensaver%mini-monitor.xpm%" Popup MenuSSaver
\&  AddToMenu "Utilities" "Screenlock%mini-lock.xpm%"     Popup MenuSLock
.Ve
.SH "AUTHORS"
.IX Header "AUTHORS"
Charles K. Hines <chuck_hines@vnet.ibm.com>, initial version.
.PP
Mikhael Goikhman <migo@homemail.com>, from 24 Feb 1999.
.SH "COPYING"
.IX Header "COPYING"
The script is distributed by the same terms as fvwm itself.
See \s-1GNU\s0 General Public License for details.
.SH "BUGS"
.IX Header "BUGS"
Depends on the output of xlock. Will produce an empty menu if the structure
of the output is changed.
.PP
Report bugs to fvwm-bug@fvwm.org.
