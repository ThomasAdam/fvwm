#!/usr/bin/perl

# ---------------------------------------------------------------------------
#
# NAME
#
#   BuildXLockMenu -
#     builds xlock menu definition for Fine Virtual Window Manager
#
# SYNOPSIS
#
#   BuildXLockMenu [ --menu-name name ] [ --menu-title title ]
#                  [ --menu-icon icon ] [ xlock params ]
#
# DESCRIPTION
#
#   A simple perl script which parses xlock's output to build an fvwm 2.xx
#   menu definition of all xlock's modes.
#
# Argument list
#
#   Arguments used by the script (must be first):
#
#   --menu-name, --menu-title, --menu-icon - define menu name, title
#   and mini-icon acordingly given in the following argument. Default is name
#   "XLockMenu", title "XLock Modes" and no mini-icon.
#
#   Additional arguments will be passed to xload.
#
# USAGE
#
# # add these lines to .fvwm2rc:
# PipeRead 'BuildXLockMenu --menu-name Screensaver --menu-title \
#   "Screensaver" --menu-icon mini-bball.xpm -nice 20 -nolock'
# PipeRead 'BuildXLockMenu --menu-name Screenlock --menu-title \
#   "Lock Screen" --menu-icon mini-rball.xpm -nice 20'
# AddToMenu "Utilities" "Screensaver%mini-monitor.xpm%" Popup Screensaver
# AddToMenu "Utilities" "Screenlock%mini-lock.xpm%"     Popup Screenlock
#
# AUTHORS
#
#   Charles K. Hines <chuck_hines@vnet.ibm.com>, initial version.
#   Mikhael Goikhman <migo@homemail.com>, 24 Feb 1999.
#
# BUGS
#
#   Depends on the output of 'xlock -h'. Will produce an empty menu, if the
#   structure of the output is changed.

$name  = "XLockMenu";
$title = "XLock Modes";
$icon  = "";

while ($ARGV[0] =~ /^--menu-/) {
  $_ = shift;
  /^--menu-n/ and $name  = shift;
  /^--menu-t/ and $title = shift;
  /^--menu-i/ and $icon  = '%' . shift() . '%';
}

$params = @ARGV? ' ' . join(' ', @ARGV): '';
$dscLen = 35 + length $icon;

$start = 0;

open(XL,"xlock -h 2>&1 |") || die "couldn't run xlock";

print "DestroyMenu $name\n";
print "AddToMenu $name \"$title\" Title\n";

while (<XL>)
{
  chomp;

  /where mode is one of:/ && do
  {
    $start = 1;
    next;
  };
  if ($start && $_)
  {
    @foo = split;
    $mode = shift @foo;
    $mode =~ /^-.*/ && next;
    printf "+ \"%-9s\t%-${dscLen}s Exec xlock$params -mode $mode\n",$mode,
      "(@foo)$icon\"";
  }
}

close XL;

#print "Beep\n";
