.rn '' }`
''' $RCSfile: fvwm-menu-headlines.1,v $$Revision: 1.2 $$Date: 2000/02/05 14:58:55 $
'''
''' $Log: fvwm-menu-headlines.1,v $
''' Revision 1.2  2000/02/05 14:58:55  migo
''' fvwm-menu scripts are mostly ready for 2.4
''' * all scripts: minor fixes to satisfy some older perl-s, leading ~ is now
''' _ expanded in file names (Olivier's requests); added --wm-icons option.
''' * fvwm-menu-desktop: added --time-limit (Alex's request).
''' * fvwm-menu-headlines: support for AppWatch site (Frederic's request);
''' _ fixed timezones; support for user defined sites; added --info,
''' _ --icon-title, --icon-item, --icon-home.
''' * fvwm-menu-xlock: (WARNING) renamed --icon to --icon-item for consistency
''' _ and added --icon-title; actually renamed --format to documented --item.
''' * fvwm-menu-directory: actually renamed --format to documented --item.
'''
'''
.de Sh
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp
.if t .sp .5v
.if n .sp
..
.de Ip
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.de Vb
.ft CW
.nf
.ne \\$1
..
.de Ve
.ft R

.fi
..
'''
'''
'''     Set up \*(-- to give an unbreakable dash;
'''     string Tr holds user defined translation string.
'''     Bell System Logo is used as a dummy character.
'''
.tr \(*W-|\(bv\*(Tr
.ie n \{\
.ds -- \(*W-
.ds PI pi
.if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\" diablo 12 pitch
.ds L" ""
.ds R" ""
'''   \*(M", \*(S", \*(N" and \*(T" are the equivalent of
'''   \*(L" and \*(R", except that they are used on ".xx" lines,
'''   such as .IP and .SH, which do another additional levels of
'''   double-quote interpretation
.ds M" """
.ds S" """
.ds N" """""
.ds T" """""
.ds L' '
.ds R' '
.ds M' '
.ds S' '
.ds N' '
.ds T' '
'br\}
.el\{\
.ds -- \(em\|
.tr \*(Tr
.ds L" ``
.ds R" ''
.ds M" ``
.ds S" ''
.ds N" ``
.ds T" ''
.ds L' `
.ds R' '
.ds M' `
.ds S' '
.ds N' `
.ds T' '
.ds PI \(*p
'br\}
.\"	If the F register is turned on, we'll generate
.\"	index entries out stderr for the following things:
.\"		TH	Title 
.\"		SH	Header
.\"		Sh	Subsection 
.\"		Ip	Item
.\"		X<>	Xref  (embedded
.\"	Of course, you have to process the output yourself
.\"	in some meaninful fashion.
.if \nF \{
.de IX
.tm Index:\\$1\t\\n%\t"\\$2"
..
.nr % 0
.rr F
.\}
.TH FVWM-MENU-HEADLINES 1 "perl 5.005, patch 01" "5/Feb/100" "Fvwm Utility"
.UC
.if n .hy 0
.if n .na
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.de CQ          \" put $1 in typewriter font
.ft CW
'if n "\c
'if t \\&\\$1\c
'if n \\&\\$1\c
'if n \&"
\\&\\$2 \\$3 \\$4 \\$5 \\$6 \\$7
'.ft R
..
.\" @(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2
.	\" AM - accent mark definitions
.bd B 3
.	\" fudge factors for nroff and troff
.if n \{\
.	ds #H 0
.	ds #V .8m
.	ds #F .3m
.	ds #[ \f1
.	ds #] \fP
.\}
.if t \{\
.	ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.	ds #V .6m
.	ds #F 0
.	ds #[ \&
.	ds #] \&
.\}
.	\" simple accents for nroff and troff
.if n \{\
.	ds ' \&
.	ds ` \&
.	ds ^ \&
.	ds , \&
.	ds ~ ~
.	ds ? ?
.	ds ! !
.	ds /
.	ds q
.\}
.if t \{\
.	ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.	ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.	ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.	ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.	ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.	ds ? \s-2c\h'-\w'c'u*7/10'\u\h'\*(#H'\zi\d\s+2\h'\w'c'u*8/10'
.	ds ! \s-2\(or\s+2\h'-\w'\(or'u'\v'-.8m'.\v'.8m'
.	ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.	ds q o\h'-\w'o'u*8/10'\s-4\v'.4m'\z\(*i\v'-.4m'\s+4\h'\w'o'u*8/10'
.\}
.	\" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds v \\k:\h'-(\\n(.wu*9/10-\*(#H)'\v'-\*(#V'\*(#[\s-4v\s0\v'\*(#V'\h'|\\n:u'\*(#]
.ds _ \\k:\h'-(\\n(.wu*9/10-\*(#H+(\*(#F*2/3))'\v'-.4m'\z\(hy\v'.4m'\h'|\\n:u'
.ds . \\k:\h'-(\\n(.wu*8/10)'\v'\*(#V*4/10'\z.\v'-\*(#V*4/10'\h'|\\n:u'
.ds 3 \*(#[\v'.2m'\s-2\&3\s0\v'-.2m'\*(#]
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.ds oe o\h'-(\w'o'u*4/10)'e
.ds Oe O\h'-(\w'O'u*4/10)'E
.	\" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.	\" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.	ds : e
.	ds 8 ss
.	ds v \h'-1'\o'\(aa\(ga'
.	ds _ \h'-1'^
.	ds . \h'-1'.
.	ds 3 3
.	ds o a
.	ds d- d\h'-1'\(ga
.	ds D- D\h'-1'\(hy
.	ds th \o'bp'
.	ds Th \o'LP'
.	ds ae ae
.	ds Ae AE
.	ds oe oe
.	ds Oe OE
.\}
.rm #[ #] #H #V #F C
.SH "NAME"
fvwm-menu-headlines \- builds headlines menu definition for FVWM
.SH "SYNOPSIS"
\fBfvwm-menu-headlines\fR
[ \fB--help\fR|\fB\-h\fR ]
[ \fB--version\fR|\fB\-v\fR ]
[ \fB--info\fR [site] ]
[ \fB--site\fR|\fB\-s\fR site ]
[ \fB--name\fR|\fB\-n\fR name ]
[ \fB--title\fR|\fB\-t\fR title ]
[ \fB--item\fR name ]
[ \fB--exec\fR|\fB\-e\fR action ]
[ \fB--icon-title\fR icon ]
[ \fB--icon-item\fR icon ]
[ \fB--icon-home\fR icon ]
[ \fB--wm-icons\fR ]
[ \fB--frontpage\fR [where] ]
[ \fB--proxy\fR|\fB\-p\fR host:port ]
[ \fB--buggyproxy\fR|\fB\-b\fR ]
[ \fB--file\fR [file] ]
[ \fB--fake\fR [file] ]
.SH "DESCRIPTION"
A perl script which builds an fvwm menu definition for headlines of popular
news web sites: FreshMeat, Slashdot, LinuxToday, Segfault and more.
.SH "OPTIONS"
\fB--help\fR    \- show the help and exit
.PP
\fB--version\fR \- show the version and exit
.PP
\fB--info\fR [site] \- if site name is given print the site specific info,
otherwise print all site names
.PP
\fB--site\fR site \- defile a web site, headlines of which to show, this option
also can be used together with --help to get new defaults.
Default site: freshmeat.
.PP
\fB--name\fR, \fB--title\fR, \fB--icon\fR \- define menu name, menu title and menu icon
accordingly given in the following argument. Default is name
\*(L"MenuHeadlinesFreshmeat\*(R", title \*(L"Freshmeat Headlines\*(R" and no mini-icon
(equivalent to an empty icon argument).
.PP
\fB--item\fR, \fB--exec\fR \- define menu item or exec format in the following
argument (what is shown and what is executed when the item is chosen),
default is \*(L'%h\e\fIt\fR\|(%[%Y\-%m-%d \f(CW%H:\fR%M])\*(R'. TAB can be specified as \*(L'\et\*(R', but
in fvwmrc you should specify a double backslash or a real TAB.
.PP
Format specifiers for a headline entry:
  \f(CW%h\fR \- headline
  \f(CW%u\fR \- url
  \f(CW%d\fR \- date in native format
  %[strftime-argument-string] \- date, see \fIstrftime\fR\|(3)
  %{name} \- site-specific-named-value
  %(text) \- arbitrary text
.PP
These specifiers can receive an optional integer size, positive for right
adjusted string or negative for left adjusted, example: \f(CW%8x\fR; and optional
*num or *\-num, which means to leave only the first or last (if minus) num of
chars, the num must be greater than 3, since the striped part is replaced
with \*(L"...\*(R", example: %*30x. Both can be combined: %\-10*\-20x, this instructs to
get only the 20 last characters, but if the length is less then 10 \- to fill
with up to 10 spaces on the right.
.PP
\fB--icon-title\fR, \fB--icon-item\fR, \fB--icon-home\fR \- define menu icon for
title, regular item and home item respectively given in the following argument.
Default is no menu icons (equivalent to an empty icon argument).
.PP
\fB--wm-icons\fR \- define icon names suitable for use with wm-icons package.
Currently this is equivalent to: --icon-title \*(L'\*(R' --icon-item
menu/information.xpm --icon-home menu/home.xpm.
.PP
\fB--frontpage\fR [where] \- show site fronpage item in the menu too. Optional
value can be used to specify where this item will be placed in the menu \-
\&'top\*(R' or \*(L't\*(R', \*(L'bottom\*(R' or \*(L'b\*(R'.
.PP
\fB--proxy\fR host[:port] \- define a proxy to use.
Example: --proxy proxy.inter.net:3128
.PP
\fB--buggyproxy\fR \- try this if your proxy requires non standard end-of-line.
.PP
\fB--file\fR [file] \- write the menu output to specified file. If no filename is
given with this option (or empty filename), the default filename
WORK_HOME/SITE.menu is used. Without this option or with \*(L'\-\*(R'
filename, the menu output is written to standard output.
.PP
\fB--fake\fR [file] \- don't connect to the host using HTTP protocol, instead,
read from WORK_HOME/SITE.in file. The following reads input from
segfault.in (downloaded http://segfault.org/stories.txt) and saves output
to segfault.menu (both files are in WORK_HOME):
  fvwm-menu-headlines --site segfault --fake --file
.PP
WORK_HOME of this script is ~/.fvwm-menu-headlines. It is created if needed.
.PP
Option parameters can be specified both using \*(L'=\*(R' and in the next argument.
Short options are ok if not ambiguous: \f(CW-h\fR, \f(CW-t\fR; but be careful with
short options, what is now unambiguous, can become ambiguous in the next
versions.
.SH "USAGE"
1. One of the ways to use this script is to define a crontab
entry to run the script every hour or so for every monitored site:
.PP
.Vb 3
\&  0,30 * * * * fvwm-menu-headlines --file --site freshmeat
\&  1,31 * * * * fvwm-menu-headlines --file --site linuxtoday
\&  2,32 * * * * fvwm-menu-headlines --file --site slashdot
.Ve
Then add these lines to your fvwm configuration file:
.PP
.Vb 3
\&  DestroyFunc FuncFvwmMenuHeadlines
\&  AddToFunc   FuncFvwmMenuHeadlines
\&  + I Read "$HOME/.fvwm-menu-headlines/$0.menu"
.Ve
.Vb 7
\&  DestroyMenu MenuHeadlines
\&  AddToMenu   MenuHeadlines "Headlines" Title
\&  + MissingSubmenuFunction FuncFvwmMenuHeadlines
\&  + "FreshMeat"  Popup freshmeat
\&  + "LinuxToday" Popup linuxtoday
\&  + "Slashdot"   Popup slashdot
\&  + "Segfault"   Popup segfault
.Ve
2. Another way to use this script (only if you have fast network/proxy) is to
run it every time you want to open your Headlines submenus.
.PP
In this case your fvwm configuration lines could be:
.PP
.Vb 3
\&  DestroyFunc FuncFvwmMenuHeadlines
\&  AddToFunc   FuncFvwmMenuHeadlines
\&  + I PipeRead "fvwm-menu-headlines --site $0"
.Ve
.Vb 8
\&  DestroyMenu MenuHeadlines
\&  AddToMenu   MenuHeadlines "Headlines" Title
\&  + MissingSubmenuFunction FuncFvwmMenuHeadlines
\&  + "FreshMeat"  Popup freshmeat
\&  + "Slashdot"   Popup slashdot
\&  + "LinuxToday" Popup linuxtoday
\&  + "Segfault"   Popup segfault
\&  + "AppWatch"   Popup appwatch
.Ve
In the end add \*(L"Popup MenuHeadlines\*(R" somewhere.
.PP
3. Here is a usual usage. Use FvwmConsole or FvwmCommand to run fvwm commands
from a shell script. Every time you want headlines from some site, execute
(give any additional options if you want):
.PP
.Vb 3
\&  PipeRead "fvwm-menu-headlines --site segfault --name MenuHeadlinesSegfault"
\&  # after several seconds
\&  Popup MenuHeadlinesSegfault
.Ve
.SH "HOW TO ADD SITE HEADLINES"
It is possible to add user defined site headlines without touching the script
itself. Put your perl extensions to the file WORK_HOME/extension.pl.
For each site add something similar to:
.PP
.Vb 8
\&  $siteInfo->{'myslashdot'} = {
\&    'name' => "MySlashdot",
\&    'host' => "myslashdot.org",
\&    'path' => "/myslashdot.xml",
\&    'func' => \e&processMySlashdot,
\&    # the following string is only used in --info
\&    'flds' => 'time, title, department, topic, author, url',
\&  };
.Ve
.Vb 11
\&  sub processMySlashdot () {
\&    return processXml(
\&      'story',
\&      # mandatory 'h', 'u' and 'd' aliases or undef
\&      { 'h' => 'title', 'u' => 'url', 'd' => 'time' },
\&      sub ($) {  # convert 'd' string to (y, m, d, H, M, S)
\&        $_[0] =~ /(\ed+)-(\ed+)-(\ed+) (\ed+):(\ed+):(\ed+)/;
\&        ($1, ($2 || 0) - 1, $3, $4, $5, $6);
\&      }, +0,  # timezone offset; already in UTC
\&    );
\&  }
.Ve
.Vb 1
\&  1;
.Ve
.SH "AUTHORS"
This script is inspired by WMHeadlines v1.3 by:
.PP
.Vb 2
\&  Jeff Meininger <jeffm@boxybutgood.com>
\&  (http://rive.boxybutgood.com/WMHeadlines/).
.Ve
Reimplemented for FVWM and heavily enhanced by:
.PP
.Vb 1
\&  Mikhael Goikhman <migo@homemail.com>, 16 Dec 1999.
.Ve
.SH "COPYING"
The script is distributed by the same terms as fvwm itself.
See GNU General Public License for details.
.SH "BUGS"
Report bugs to fvwm-bug@fvwm.org.

.rn }` ''
.IX Title "FVWM-MENU-HEADLINES 1"
.IX Name "fvwm-menu-headlines - builds headlines menu definition for FVWM"

.IX Header "NAME"

.IX Header "SYNOPSIS"

.IX Header "DESCRIPTION"

.IX Header "OPTIONS"

.IX Header "USAGE"

.IX Header "HOW TO ADD SITE HEADLINES"

.IX Header "AUTHORS"

.IX Header "COPYING"

.IX Header "BUGS"

