#!/bin/sh

# Convert .fvwm2rc from 2.2.x format to 2.4.x format.

# Originally written by Dan Espen <despen@telcordia.com> Sept 2000
# Based on fvwmrc_convert.

# gawk has IGNORECASE, so we use it if possible.
if [ -n "`command -v gawk 2>/dev/null`" ] ; then
   AWK=`command -v gawk`
elif [ -x /usr/bin/gawk ] ; then
   AWK=/usr/bin/gawk
elif [ -n "`command -v nawk 2>/dev/null`" ] ; then
   AWK=`command -v nawk`
elif [ -n "`command -v awk 2>/dev/null`" ] ; then
   AWK=`command -v awk`
elif [ -x /usr/bin/awk ] ; then
   AWK=/usr/bin/awk
fi

if [ ! -x $AWK ]; then
   echo "Can't find any awk, cannot run!" >&2
   exit 1
fi

source=${1:-$HOME/.fvwm2rc}
if [ ! -r $source ] ; then
	echo "Can't find source file $source, giving up" >&2
	exit 1
fi

dest=${2:-$HOME/.fvwm/.fvwm2rc}
if [ "$dest" != "-" ] ;then
  echo "Output to $dest" >&2
  if [ -f $dest ] ; then
    echo "Output file $dest already exists, exiting." >&2
    exit 1
  else
    cp -p $source $dest 2>/dev/null  # try to preserve permissions
  fi
fi
cat $source | $AWK '
BEGIN   {
  print "# This file changed by the .fvwm2rc to .fvwm/.fvwm2rc converter";
  TRUE=1; FALSE=0;
  # This onlyworks with gawk
  IGNORECASE=TRUE;
  # create assoc array by imagepath:
  imagepath="FVWM_IMAGEPATH";
  isize = split(imagepath,iarray,":");
  for (i=1;i<=isize; ++i) {
    iassoc[iarray[i]] = "1";
  }
}

/^[#]/ {                    # Comment, pass it thru
  print;
  next;
}

/^[ \t]*$/ {                    # Empty line, pass it thru
  print;
  next;
}

# Adds "path" to "newpath":
function add_to_path(path) {
  psize = split(path,parray,":");	# split them up
  for (i=1; i<=psize; ++i) {
    # Drop any builtin imagepath:
    if (iassoc[parray[i]] == "1" ) {
      continue;
    }
    if (parray[i] == "\\") { continue }; skip any end of line backslash
    # This next line should probably only skip files starting with $
    # that dont start with  $HOME.
    if (substr(parray[i],1,1) == "$") { continue };  
    if (newpath == "") {
      newpath=parray[i];
    } else {
      newpath=newpath ":" parray[i];
    }
  }
}

# Note limited attempt to match case:
/[Ii]con[Pp]ath|[Pp]ixmap[Pp]ath/ { # Fix up IconPath/PixmapPath:
  newpath="";
  add_to_path($2);
  line=$0;			# prime possible loop
  while (substr(line,length(line),1) == "\\") {
    getline line;
    add_to_path(line);    
  }
  if (newpath == "") {
    print "# To use your own icons, uncomment and change the next line";
    print "#ImagePath $HOME/icons:+";
  } else {
    print "ImagePath " newpath ":+";
  }
  next;
}

/[Hh]ilight[Cc]olor/ {
  split($2,colors,"/");
  print "Style \"*\" Hilightfore " colors[1] ", HilightBack " colors[2];
  next;
}

/[Ww]indow[Ff]ont/ {
  print "Style \"*\" Font " $2;
  next;
}

/[Cc]olor[Ll]imit/ {
  next;
}

/[Mm]odule[Pp]ath/ {
  # Deletes continuation lines too, although if there are
  # continuation lines, there might be some part of the path we want to
  # Delete them anyway.
  while (substr($0,length($0),1) == "\\") {
    getline $0;
  }
  next;
}

{print;}			# pass everything else thru
' > $dest
