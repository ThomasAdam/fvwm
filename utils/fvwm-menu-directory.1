.rn '' }`
''' $RCSfile: fvwm-menu-directory.1,v $$Revision: 1.5 $$Date: 1999/08/17 21:27:51 $
'''
''' $Log: fvwm-menu-directory.1,v $
''' Revision 1.5  1999/08/17 21:27:51  migo
''' * BuildXLockMenu: the compatibility wrapper to fvwm-menu-xlock
''' * restored old menu shell scripts used as examples in the man page
''' * some small documentation fixes
'''
''' Revision 1.8  1999/08/23 20:37:24  migo
''' * fixed bad allocation and fvwm hang for menu labels with more than two TABs
''' * fvwm-menu-directory: new option --format (%s, %d, %n etc.); extended --title
''' * fvwm-menu-xlock: new options --format and --special-first
''' * fvwm_make_browse_menu.sh: improved the simulation command line
'''
'''
.de Sh
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp
.if t .sp .5v
.if n .sp
..
.de Ip
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.de Vb
.ft CW
.nf
.ne \\$1
..
.de Ve
.ft R

.fi
..
'''
'''
'''     Set up \*(-- to give an unbreakable dash;
'''     string Tr holds user defined translation string.
'''     Bell System Logo is used as a dummy character.
'''
.tr \(*W-|\(bv\*(Tr
.ie n \{\
.ds -- \(*W-
.ds PI pi
.if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\" diablo 12 pitch
.ds L" ""
.ds R" ""
'''   \*(M", \*(S", \*(N" and \*(T" are the equivalent of
'''   \*(L" and \*(R", except that they are used on ".xx" lines,
'''   such as .IP and .SH, which do another additional levels of
'''   double-quote interpretation
.ds M" """
.ds S" """
.ds N" """""
.ds T" """""
.ds L' '
.ds R' '
.ds M' '
.ds S' '
.ds N' '
.ds T' '
'br\}
.el\{\
.ds -- \(em\|
.tr \*(Tr
.ds L" ``
.ds R" ''
.ds M" ``
.ds S" ''
.ds N" ``
.ds T" ''
.ds L' `
.ds R' '
.ds M' `
.ds S' '
.ds N' `
.ds T' '
.ds PI \(*p
'br\}
.\"	If the F register is turned on, we'll generate
.\"	index entries out stderr for the following things:
.\"		TH	Title 
.\"		SH	Header
.\"		Sh	Subsection 
.\"		Ip	Item
.\"		X<>	Xref  (embedded
.\"	Of course, you have to process the output yourself
.\"	in some meaninful fashion.
.if \nF \{
.TH FVWM-MENU-DIRECTORY 1 "perl 5.005, patch 01" "17/Aug/99" "Fvwm Utility"
.tm Index:\\$1\t\\n%\t"\\$2"
..
.nr % 0
.rr F
.\}
.TH FVWM-MENU-DIRECTORY 1 "perl 5.005, patch 01" "23/Aug/99" "Fvwm Utility"
.UC
.if n .hy 0
.if n .na
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.de CQ          \" put $1 in typewriter font
.ft CW
'if n "\c
'if t \\&\\$1\c
'if n \\&\\$1\c
'if n \&"
\\&\\$2 \\$3 \\$4 \\$5 \\$6 \\$7
'.ft R
..
.\" @(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2
.	\" AM - accent mark definitions
.bd B 3
.	\" fudge factors for nroff and troff
.if n \{\
.	ds #H 0
.	ds #V .8m
.	ds #F .3m
.	ds #[ \f1
.	ds #] \fP
.\}
.if t \{\
.	ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.	ds #V .6m
.	ds #F 0
.	ds #[ \&
.	ds #] \&
.\}
.	\" simple accents for nroff and troff
.if n \{\
.	ds ' \&
.	ds ` \&
.	ds ^ \&
.	ds , \&
.	ds ~ ~
.	ds ? ?
.	ds ! !
.	ds /
.	ds q
.\}
.if t \{\
.	ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.	ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.	ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.	ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.	ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.	ds ? \s-2c\h'-\w'c'u*7/10'\u\h'\*(#H'\zi\d\s+2\h'\w'c'u*8/10'
.	ds ! \s-2\(or\s+2\h'-\w'\(or'u'\v'-.8m'.\v'.8m'
.	ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.	ds q o\h'-\w'o'u*8/10'\s-4\v'.4m'\z\(*i\v'-.4m'\s+4\h'\w'o'u*8/10'
.\}
.	\" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds v \\k:\h'-(\\n(.wu*9/10-\*(#H)'\v'-\*(#V'\*(#[\s-4v\s0\v'\*(#V'\h'|\\n:u'\*(#]
.ds _ \\k:\h'-(\\n(.wu*9/10-\*(#H+(\*(#F*2/3))'\v'-.4m'\z\(hy\v'.4m'\h'|\\n:u'
.ds . \\k:\h'-(\\n(.wu*8/10)'\v'\*(#V*4/10'\z.\v'-\*(#V*4/10'\h'|\\n:u'
.ds 3 \*(#[\v'.2m'\s-2\&3\s0\v'-.2m'\*(#]
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.ds oe o\h'-(\w'o'u*4/10)'e
.ds Oe O\h'-(\w'O'u*4/10)'E
.	\" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.	\" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.	ds : e
.	ds 8 ss
.	ds v \h'-1'\o'\(aa\(ga'
.	ds _ \h'-1'^
.	ds . \h'-1'.
.	ds 3 3
.	ds o a
.	ds d- d\h'-1'\(ga
.	ds D- D\h'-1'\(hy
.	ds th \o'bp'
.	ds Th \o'LP'
.	ds ae ae
fvwm-menu-directory \- builds a directory browsing menu for FVWM
.	ds oe oe
.	ds Oe OE
.\}
.rm #[ #] #H #V #F C
[ \fB--name\fR|\fB\-n\fR NAME ]
fvwm-menu-directory 2.3.7 \- builds a directory browsing menu for FVWM
\fBfvwm-menu-directory\fR
[ \fB--help\fR|\fB\-h\fR ]
[ \fB--version\fR|\fB\-v\fR ]
[ \fB--name\fR|\fB\-na\fR NAME ]
[ \fB--title\fR|\fB\-t\fR NAME ]
[ \fB--format\fR|\fB\-f\fR NAME ]
[ \fB--icon-app\fR|\fB\-icon-a\fR XPM ]
[ \fB--icon-dir\fR|\fB\-icon-d\fR XPM ]
[ \fB--icon-file\fR|\fB\-icon-f\fR XPM ]
[ \fB--icon-title\fR|\fB\-icon-t\fR XPM ]
[ \fB--dir\fR|\fB\-d\fR NAME ]
[ \fB--order\fR|\fB\-o\fR NUM ]
[ \fB--[no]all\fR|\fB\-a\fR ]
[ \fB--[no]links\fR|\fB\-l\fR ]
[ \fB--xterm\fR|\fB\-x\fR CMD ]
[ \fB--exec-app\fR|\fB\-exec-a\fR [CMD] ]
[ \fB--exec-file\fR|\fB\-exec-f\fR CMD ]
[ \fB--exec-title\fR|\fB\-exec-t\fR CMD ]
[ \fB--[no]reuse\fR|\fB\-r\fR ]
[ \fB--[no]check-subdir\fR|\fB\-c\fR ]
[ \fB--[no]special-dirs\fR|\fB\-s\fR ]
[ \fB--[no]memory-for-speed\fR|\fB\-m\fR ]
.SH "DESCRIPTION"
A perl script which provides an output to read in with PipeRead to build an
fvwm menu containing a directory listing. Almost everything can be configured.
.SH "OPTIONS"
\fB--title=NAME\fR \- menu title, default is \*(L'%p\*(R'. Formats \f(CW%d\fR, \f(CW%p\fR may be used
to subtitute the current directory name or the full path.
  \f(CW%D\fR \- file/dir date (yyyy-mm-dd)
  \f(CW%s\fR \- file/dir size (in bytes)
  \f(CW%t\fR \- file/dir type (File|Dir |Link|Sock|Blck|Char|Pipe)
  \f(CW%T\fR \- file/dir type (F|D|L|S|B|C|P)
.PP
Example: --title \*(L'%*\-40p\etDate, Type\etSize\*(R' --format \*(L'%*40n\et%d \f(CW%t\fR\et%s\*(R'
.PP
\fB--icon-app=XPM\fR   \- menu application icon, default is no
.PP
\fB--icon-dir=XPM\fR   \- menu dir   icon, default is no
.PP
\fB--icon-file=XPM\fR  \- menu file  icon, default is no
.PP
\fB--icon-title=XPM\fR \- menu title icon, default is no
.PP
\fB--dir=NAME\fR \- starting dir, default is ${HOME\-.}
.PP
\fB--order=NUM\fR \- NUM (\-6 .. 6), default is 5.
  1 \- do not sort,  2 \- dirs first, 3 \- files first
  4 \- sort by name, 5 \- dirs first, 6 \- files first
  Negative number represents reverse order.
.PP
\fB--[no]all\fR \- show hidden files, like in \*(L'ls \-A\*(R', default is --noall
.PP
\fB--[no]links\fR \- follow linked directories, default is --nolinks
.PP
\fB--xterm=CMD\fR \- X terminal call, default is \*(L'xterm \-e\*(R'
.PP
\fB--exec-shell=CMD\fR \- an action on directory title (usually the shell),
default is ${SHELL\-/bin/sh}.
\&\*(R'\-\*(R' means no action.
If the command is not started with \*(L'^\*(R' X terminal call is prepended.
The command is started in the currently browsed directory.
.PP
\fB--exec-file=CMD\fR \- an action on regular files, default is ${EDITOR\-vi}.
\&\*(R'\-\*(R' means no action.
If the command is not started with \*(L'^\*(R' X terminal call is prepended.
The actual file name is appended to the command.
.PP
\fB--exec-app[=CMD]\fR \- an action on +x files, default is \*(L'\-\*(R',
which means the same action as on regular files. If no command is given,
it is assumed to be an empty \- simply run the +x file.
If the command is not started with \*(L'^\*(R' X terminal call is prepended.
The actual file name is appended to the command.
.PP
\fB--[no]reuse\fR \- no pop-up menus, reuse the same menu, default is --noreuse.
When you specify this option the Menu style is used, not Popup. Also,
the --name parameter is not ignored and --dir parameter is ignored
if there is ~/.fmd.dir file. This file is only created or used with this
option specified, it is the only solution for the current fvwm menu state.
.PP
\fB--[no]check-subdirs\fR \- check all subdirs for having execute (+x) permission
and replace \*(L"Popup"/"Menu\*(R" command with \*(L"Nop\*(R" for these without permissions.
This has a visual effect of disabling popup triangle in the subdirectory item.
The default is --nocheck-subdirs, because: 1) enabling this slows a bit the
script, 2) with this option enabled, if no icons used and no dir/file separate
sorting used there is no way to know that the item is directory and not file.
.PP
\fB--[no]special-dirs\fR \- include .. and ~ directories, default is
--nospecial-dirs
.PP
\fB--[no]memory-for-speed\fR \- use speed optimization, default is
--nomemory-for-speed
.PP
.Vb 2
\&    Warning: speed optimization takes up a lot of memory
\&    that is never free'd again while fvwm is running.
.Ve
Option parameters can be specified both using \*(L'=\*(R' and in the next argument.
Short options are ok if not ambiguous: \-a, \-x, \-icon-f.
.SH "USAGE"
Put this into your fvwm configuration file to invoke the script:
.PP
.Vb 2
\&  AddToFunc FuncFvwmMenuDirectory
\&  + I PipeRead "fvwm-menu-directory -d $0"
.Ve
More complex example (the + line is one long line):
.PP
.Vb 2
\&  # AddToFunc FuncFvwmMenuDirectory
\&  # + I PipeRead "fvwm-menu-directory -d $0 -x 'Eterm -g 80x40 -e' -a -l -o 6 --exec-app --exec-title 'tcsh -l' --exec-file 'vim -R' -t 'Go to: %d' --icon-file menu/editor.xpm --icon-dir menu/folder.xpm --icon-title menu/shell.xpm --icon-app menu/utility.xpm
.Ve
And put this in the menu from which you want to pop-up the directory menus:
.PP
.Vb 2
\&  AddToMenu SomeMenu MissingSubmenuFunction FuncFvwmMenuDirectory
\&  + "Httpd Directory" Popup /home/httpd
.Ve
Note: please use absolute path names.
.PP
It is a good idea to set the menu pop-up delay to something positive:
.PP
.Vb 1
\&  MenuStyle * PopupDelayed, PopupDelay 100
.Ve
in your configuration file when using this script for better results.
.PP
Another very interesting usage (--reuse or \-r is mandatary for this):
.PP
.Vb 3
\&  AddToMenu MenuBrowser
\&  + DynamicPopupAction Piperead "fvwm-menu-directory -r -na MenuBrowser -d / -s"
\&  AddToMenu SomeMenu "My Browser" Menu MenuBrowser
.Ve
Here --dir starting parameter is ignored if there is ~/.fmd.dir file,
you can delete it.
.SH "AUTHORS"
Created   on 06-07-1999 by Dominik Vogt     <domivogt@fvwm.org>.
.PP
Rewritten on 05-08-1999 by Mikhael Goikhman <migo@homemail.com>.
.SH "COPYING"
The script is distributed by the same terms as fvwm itself.
.IX Name "fvwm-menu-directory - builds a directory browsing menu for FVWM"
.SH "BUGS"
Report bugs to fvwm-bug@fvwm.org.

.rn }` ''
.IX Title "FVWM-MENU-DIRECTORY 1"
.IX Name "fvwm-menu-directory 2.3.7 - builds a directory browsing menu for FVWM"

.IX Header "NAME"

.IX Header "SYNOPSIS"

.IX Header "DESCRIPTION"

.IX Header "OPTIONS"

.IX Header "USAGE"

.IX Header "AUTHORS"

.IX Header "COPYING"

.IX Header "BUGS"

