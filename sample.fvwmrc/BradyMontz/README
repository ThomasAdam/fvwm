Intro:
------

This directory contains all the stuff you need to use my fvwm
configuration. I've been using fvwm for a long time, and have to run it on a
variety of machines, so my fvwm2rc file has a lot of M4 commands, and uses a
good number of shell scripts. If you don't want to read the rest of this file, 
simply copy fvwm2rc.no_m4 to ~/.fvwm2rc (backing up yours first), read the 
comments at the top of that file,  run "make install" in the ./src
directory, and start fvwm.

I. I've included two versions of my fvwm2rc file:
------------------------------------------------

1. fvwm2rc:
	This is my true fvwm2rc file. It has loads of M4 stuff in it. As such, 
	it will definitely be a labor to get it working in your environment. It
	assumes the existance of the following environment variables:

	UNAME : set to `uname`. Will be Linux, HPUX, SUNOS, or OSF1
	ARCH  : set to one of i586, i686, or alpha
	MAIL  : you know what that is.
	EXIT  : environment variable set to the pid of the program which
	        .xsession is waiting on. The common thing to do is make
	        .xsession wait on fvwm, but then you can't exit fvwm without
	        logging out (no fun when trying to use new window managers or
	        debug fvwm/fvwm2rc). My .xsession starts another program
	        (described in section III) and waits on it, and sets the env
	        variable EXIT to its pid. To log out, fvwm runs "kill $EXIT".
	
	In addition, these I sometimes set on the fvwm command line:

	NOINIT : I only ever set this on the fvwm command line. This way I can 
	         exit and start fvwm without my InitFunction starting a whole
	         new suite of xterms and emacsen.

	And the following variables are set in the fvwm2rc file:

	BACKGROUND_COMMAND: command run to set my pretty root window colors.
	EMACS_COMMAND: how to run emacs on this machine.
	NOSHAPE: set when running on machines without shape extension.
	FVWM_BACKCOLOR: my official background color for just about everything
	FVWM_FORECOLOR: my official foreground color for just about everything
	FVWMICONMAN_LATEST: set when running the latest version of FvwmIconMan
	                    which is probably only on my home machine.

	these I use when testing FvwmIconMan:

	FVWMICONMAN_DEFAULTS: test FvwmIconMan's default colors.
	FVWMICONMAN_TEST: tests FvwmIconMan running in all possible gravities.

	I invoke fvwm2 with the script fvwm2_init (included).

2. fvwm2rc.no_m4:
	The above run through m4 on my linux-i586 machine at home with my
	usual settings. I expect you to use this file.

II. Required icons and gifs:
----------------------------

1. Icons: Normally my icons reside in /home/bradym/init/fvwm/icons. You will
   have to change the IconPath and PixmapPath lines to point to the icons
   directory in this directory. I've included the icons I currently use, plus
   a couple I've used in the past and probably will again.

2. Roots: I have a bunch of "texture" gifs which I tile the root window
   with. I've only included a couple here for space reasons. Normally these
   reside in /home/bradym/init/fvwm/roots. You will have to change all
   occurences of this string to point to the roots subdirectory of this
   directory. Or, you can change this to the "textures" directory in the root
   directory of the fvwm source tree.

III. Programs used in my fvwm2rc:
---------------------------------

Scripts are in the bin directory. Source code to C programs is in the src
directory. Run "make install" in the src directory to build and install those
programs into ./bin

1. randexec: python script to run a command (second argument) on a random file 
   in a directory (first argument). In the bin directory.

2. runclock: xdaliclock for some reason sometimes crashes on me if it starts
   too soon after FvwmButtons spawns it. runclock is a shell script which
   simply sleeps 5 seconds before starting xdaliclock. In the bin directory.

3. xpaste: Simple program which pops up a window containing the clipboard
   contents. I use it in FvwmButtons. The source is in the src directory.

4. diald-up, diald-down: setuid programs which signal diald to
   connect/disconnect ppp connection. Not included.

5. myxlock: shell script which I use to cope with the fact that some machines
   have xscreensaver, and some don't. In the bin directory.

6. gnuframe: script to tell an xemacs server to start a new frame on
   $DISPLAY. Used when I log into alphas which don't have xemacs installed, so 
   I use ssh to run gnuframe on the pentium on my desk to open a frame on the
   correct display. Handy trick.

7. fvwm2_init: shell script used to start fvwm2. Does five grody things:
	a. pipes fvwm output to the files $HOME/.fvwm-errors and
	   $HOME/.fvwm-output. 
	b. Figures out where FvwmM4 is (I've decided to not trust the people
	   who install fvwm to set ModulePath correctly - often it's me :-)).
	c. When run as "fvwm2_init noinit" it starts fvwm2 with a stripped
	   InitFunction. 
	d. Sets the m4 quote chars to { and }.
	e. Passes the ARCH and UNAME environment variables to m4 (I've learned
	   not to use the builtin variables programs like zsh and fvwm provide
	   to denote the operating system, since (1) they can change from
	   release to release, (2) may depend on other things which change
	   from release to release like /etc/issue, and (3) Every program has
	   it's own way of doing it. This way I can use the same two env
	   variables for fvwm, zsh, bash, tcsh, emacs, xemacs, etc. I have a
	   third variable SYSTEM with I use to distinguish variations in UNAME 
	   like sunos4 vs. sunos5. or a.out vs. elf vs. glibc)

8. block: Simple C program which just waits for a signal then exits. My
   .xsession runs this program, sets $EXIT to the pid, and waits on it. My
   fvwm2rc kills $EXIT when I want to log out. block.c is in the src
   directory. A sample .xsession is in the bin directory. My fvwm2rc will
   work perfectly fine without this.

9. Things all standard on linux or easy to get/replace: xemacs, xterm, xbiff,
   procmeter, xdaliclock, netscape, xv, ical, xconsole, dctrl (comes with
   diald), xsetroot, ssh (secure rlogin). None are included (thank goodness!)

IV. Misc comments:
------------------

I've used xkeycaps to make my "windows" key into a modifier key. I did that by
setting the keysym to that key to Hyper_L (in the Keyboard character set), and
the Modifiers to Mod3. The Mouse and Key commands in my .fvwm2rc which look
like this:

Mouse 1		A	3	Popup WindowOps

are using that key.

I have three main menus: WindowOps, Machines, and Control, bound to the 1st,
2nd, and 3rd mouse buttons in the root window. Holding the windows key allows
me to pop up those menus anywhere.

Clicking the first mouse button in the title raises, the second calls
Move-or-Iconify, and the third lowers. Holding the meta key with those mouse
presses does the same thing when the mouse is anywhere in the window.

V. Author:
----------

Brady Montz
bradym@cs.arizona.edu

Your friendly fvwm maintainer.





	

	

